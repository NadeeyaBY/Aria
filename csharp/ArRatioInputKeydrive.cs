//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.8
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace AriaCS {

public class ArRatioInputKeydrive : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  public ArRatioInputKeydrive(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  public static global::System.Runtime.InteropServices.HandleRef getCPtr(ArRatioInputKeydrive obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~ArRatioInputKeydrive() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          AriaCSPINVOKE.delete_ArRatioInputKeydrive(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public ArRatioInputKeydrive(ArRobot robot, ArActionRatioInput input, int priority, double velIncrement) : this(AriaCSPINVOKE.new_ArRatioInputKeydrive__SWIG_0(ArRobot.getCPtr(robot), ArActionRatioInput.getCPtr(input), priority, velIncrement), true) {
  }

  public ArRatioInputKeydrive(ArRobot robot, ArActionRatioInput input, int priority) : this(AriaCSPINVOKE.new_ArRatioInputKeydrive__SWIG_1(ArRobot.getCPtr(robot), ArActionRatioInput.getCPtr(input), priority), true) {
  }

  public ArRatioInputKeydrive(ArRobot robot, ArActionRatioInput input) : this(AriaCSPINVOKE.new_ArRatioInputKeydrive__SWIG_2(ArRobot.getCPtr(robot), ArActionRatioInput.getCPtr(input)), true) {
  }

  public void takeKeys() {
    AriaCSPINVOKE.ArRatioInputKeydrive_takeKeys(swigCPtr);
  }

  public void giveUpKeys() {
    AriaCSPINVOKE.ArRatioInputKeydrive_giveUpKeys(swigCPtr);
  }

  public void up() {
    AriaCSPINVOKE.ArRatioInputKeydrive_up(swigCPtr);
  }

  public void down() {
    AriaCSPINVOKE.ArRatioInputKeydrive_down(swigCPtr);
  }

  public void z() {
    AriaCSPINVOKE.ArRatioInputKeydrive_z(swigCPtr);
  }

  public void x() {
    AriaCSPINVOKE.ArRatioInputKeydrive_x(swigCPtr);
  }

  public void left() {
    AriaCSPINVOKE.ArRatioInputKeydrive_left(swigCPtr);
  }

  public void right() {
    AriaCSPINVOKE.ArRatioInputKeydrive_right(swigCPtr);
  }

  public void space() {
    AriaCSPINVOKE.ArRatioInputKeydrive_space(swigCPtr);
  }

  public ArFunctor getFireCB() {
    global::System.IntPtr cPtr = AriaCSPINVOKE.ArRatioInputKeydrive_getFireCB(swigCPtr);
    ArFunctor ret = (cPtr == global::System.IntPtr.Zero) ? null : new ArFunctor(cPtr, false);
    return ret;
  }

}

}
