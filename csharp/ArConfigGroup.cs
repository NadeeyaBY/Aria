//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.8
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace AriaCS {

public class ArConfigGroup : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  public ArConfigGroup(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  public static global::System.Runtime.InteropServices.HandleRef getCPtr(ArConfigGroup obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~ArConfigGroup() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          AriaCSPINVOKE.delete_ArConfigGroup(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public ArConfigGroup(string baseDirectory) : this(AriaCSPINVOKE.new_ArConfigGroup__SWIG_0(baseDirectory), true) {
  }

  public ArConfigGroup() : this(AriaCSPINVOKE.new_ArConfigGroup__SWIG_1(), true) {
  }

  public void addConfig(ArConfig config) {
    AriaCSPINVOKE.ArConfigGroup_addConfig(swigCPtr, ArConfig.getCPtr(config));
  }

  public void remConfig(ArConfig config) {
    AriaCSPINVOKE.ArConfigGroup_remConfig(swigCPtr, ArConfig.getCPtr(config));
  }

  public bool parseFile(string fileName, bool continueOnError) {
    bool ret = AriaCSPINVOKE.ArConfigGroup_parseFile__SWIG_0(swigCPtr, fileName, continueOnError);
    return ret;
  }

  public bool parseFile(string fileName) {
    bool ret = AriaCSPINVOKE.ArConfigGroup_parseFile__SWIG_1(swigCPtr, fileName);
    return ret;
  }

  public bool reloadFile(bool continueOnError) {
    bool ret = AriaCSPINVOKE.ArConfigGroup_reloadFile__SWIG_0(swigCPtr, continueOnError);
    return ret;
  }

  public bool reloadFile() {
    bool ret = AriaCSPINVOKE.ArConfigGroup_reloadFile__SWIG_1(swigCPtr);
    return ret;
  }

  public bool writeFile(string fileName) {
    bool ret = AriaCSPINVOKE.ArConfigGroup_writeFile(swigCPtr, fileName);
    return ret;
  }

  public void setBaseDirectory(string baseDirectory) {
    AriaCSPINVOKE.ArConfigGroup_setBaseDirectory(swigCPtr, baseDirectory);
  }

  public string getBaseDirectory() {
    string ret = AriaCSPINVOKE.ArConfigGroup_getBaseDirectory(swigCPtr);
    return ret;
  }

}

}
