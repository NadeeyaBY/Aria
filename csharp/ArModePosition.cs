//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.8
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace AriaCS {

public class ArModePosition : ArMode {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  public ArModePosition(global::System.IntPtr cPtr, bool cMemoryOwn) : base(AriaCSPINVOKE.ArModePosition_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  public static global::System.Runtime.InteropServices.HandleRef getCPtr(ArModePosition obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~ArModePosition() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          AriaCSPINVOKE.delete_ArModePosition(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public ArModePosition(ArRobot robot, string name, char key, char key2, ArAnalogGyro gyro) : this(AriaCSPINVOKE.new_ArModePosition__SWIG_0(ArRobot.getCPtr(robot), name, key, key2, ArAnalogGyro.getCPtr(gyro)), true) {
  }

  public ArModePosition(ArRobot robot, string name, char key, char key2) : this(AriaCSPINVOKE.new_ArModePosition__SWIG_1(ArRobot.getCPtr(robot), name, key, key2), true) {
  }

  public override void activate() {
    AriaCSPINVOKE.ArModePosition_activate(swigCPtr);
  }

  public override void deactivate() {
    AriaCSPINVOKE.ArModePosition_deactivate(swigCPtr);
  }

  public override void userTask() {
    AriaCSPINVOKE.ArModePosition_userTask(swigCPtr);
  }

  public override void help() {
    AriaCSPINVOKE.ArModePosition_help(swigCPtr);
  }

  public void up() {
    AriaCSPINVOKE.ArModePosition_up(swigCPtr);
  }

  public void down() {
    AriaCSPINVOKE.ArModePosition_down(swigCPtr);
  }

  public void left() {
    AriaCSPINVOKE.ArModePosition_left(swigCPtr);
  }

  public void right() {
    AriaCSPINVOKE.ArModePosition_right(swigCPtr);
  }

  public void stop() {
    AriaCSPINVOKE.ArModePosition_stop(swigCPtr);
  }

  public void reset() {
    AriaCSPINVOKE.ArModePosition_reset(swigCPtr);
  }

  public void mode() {
    AriaCSPINVOKE.ArModePosition_mode(swigCPtr);
  }

  public void gyro() {
    AriaCSPINVOKE.ArModePosition_gyro(swigCPtr);
  }

  public void incDistance() {
    AriaCSPINVOKE.ArModePosition_incDistance(swigCPtr);
  }

  public void decDistance() {
    AriaCSPINVOKE.ArModePosition_decDistance(swigCPtr);
  }

}

}
