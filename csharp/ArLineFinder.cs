//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.8
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace AriaCS {

public class ArLineFinder : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  public ArLineFinder(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  public static global::System.Runtime.InteropServices.HandleRef getCPtr(ArLineFinder obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~ArLineFinder() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          AriaCSPINVOKE.delete_ArLineFinder(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public ArLineFinder(ArRangeDevice dev) : this(AriaCSPINVOKE.new_ArLineFinder(ArRangeDevice.getCPtr(dev)), true) {
  }

  public SWIGTYPE_p_std__setT_ArLineFinderSegment_p_t getLinesAsSet() {
    SWIGTYPE_p_std__setT_ArLineFinderSegment_p_t ret = new SWIGTYPE_p_std__setT_ArLineFinderSegment_p_t(AriaCSPINVOKE.ArLineFinder_getLinesAsSet(swigCPtr), true);
    return ret;
  }

  public SWIGTYPE_p_std__setT_ArPose_t getNonLinePointsAsSet() {
    SWIGTYPE_p_std__setT_ArPose_t ret = new SWIGTYPE_p_std__setT_ArPose_t(AriaCSPINVOKE.ArLineFinder_getNonLinePointsAsSet(swigCPtr), true);
    return ret;
  }

  public ArPose getLinesTakenPose() {
    ArPose ret = new ArPose(AriaCSPINVOKE.ArLineFinder_getLinesTakenPose(swigCPtr), true);
    return ret;
  }

  public void saveLast() {
    AriaCSPINVOKE.ArLineFinder_saveLast(swigCPtr);
  }

  public void getLinesAndSaveThem() {
    AriaCSPINVOKE.ArLineFinder_getLinesAndSaveThem(swigCPtr);
  }

  public void setVerbose(bool verbose) {
    AriaCSPINVOKE.ArLineFinder_setVerbose(swigCPtr, verbose);
  }

  public bool getVerbose() {
    bool ret = AriaCSPINVOKE.ArLineFinder_getVerbose(swigCPtr);
    return ret;
  }

  public void setLineCreationParams(int minLineLen, int minLinePoints) {
    AriaCSPINVOKE.ArLineFinder_setLineCreationParams__SWIG_0(swigCPtr, minLineLen, minLinePoints);
  }

  public void setLineCreationParams(int minLineLen) {
    AriaCSPINVOKE.ArLineFinder_setLineCreationParams__SWIG_1(swigCPtr, minLineLen);
  }

  public void setLineCreationParams() {
    AriaCSPINVOKE.ArLineFinder_setLineCreationParams__SWIG_2(swigCPtr);
  }

  public void setLineCombiningParams(int angleTol, int linesCloseEnough) {
    AriaCSPINVOKE.ArLineFinder_setLineCombiningParams__SWIG_0(swigCPtr, angleTol, linesCloseEnough);
  }

  public void setLineCombiningParams(int angleTol) {
    AriaCSPINVOKE.ArLineFinder_setLineCombiningParams__SWIG_1(swigCPtr, angleTol);
  }

  public void setLineCombiningParams() {
    AriaCSPINVOKE.ArLineFinder_setLineCombiningParams__SWIG_2(swigCPtr);
  }

  public void setLineFilteringParams(int minPointsInLine, int minLineLength) {
    AriaCSPINVOKE.ArLineFinder_setLineFilteringParams__SWIG_0(swigCPtr, minPointsInLine, minLineLength);
  }

  public void setLineFilteringParams(int minPointsInLine) {
    AriaCSPINVOKE.ArLineFinder_setLineFilteringParams__SWIG_1(swigCPtr, minPointsInLine);
  }

  public void setLineFilteringParams() {
    AriaCSPINVOKE.ArLineFinder_setLineFilteringParams__SWIG_2(swigCPtr);
  }

  public void setLineValidParams(int maxDistFromLine, int maxAveDistFromLine) {
    AriaCSPINVOKE.ArLineFinder_setLineValidParams__SWIG_0(swigCPtr, maxDistFromLine, maxAveDistFromLine);
  }

  public void setLineValidParams(int maxDistFromLine) {
    AriaCSPINVOKE.ArLineFinder_setLineValidParams__SWIG_1(swigCPtr, maxDistFromLine);
  }

  public void setLineValidParams() {
    AriaCSPINVOKE.ArLineFinder_setLineValidParams__SWIG_2(swigCPtr);
  }

  public void setMaxDistBetweenPoints(int maxDistBetweenPoints) {
    AriaCSPINVOKE.ArLineFinder_setMaxDistBetweenPoints__SWIG_0(swigCPtr, maxDistBetweenPoints);
  }

  public void setMaxDistBetweenPoints() {
    AriaCSPINVOKE.ArLineFinder_setMaxDistBetweenPoints__SWIG_1(swigCPtr);
  }

  public void addToConfig(ArConfig config, string section) {
    AriaCSPINVOKE.ArLineFinder_addToConfig(swigCPtr, ArConfig.getCPtr(config), section);
  }

}

}
