//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.8
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace AriaCS {

public class ArModeCamera : ArMode {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  public ArModeCamera(global::System.IntPtr cPtr, bool cMemoryOwn) : base(AriaCSPINVOKE.ArModeCamera_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  public static global::System.Runtime.InteropServices.HandleRef getCPtr(ArModeCamera obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~ArModeCamera() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          AriaCSPINVOKE.delete_ArModeCamera(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public ArModeCamera(ArRobot robot, string name, char key, char key2) : this(AriaCSPINVOKE.new_ArModeCamera(ArRobot.getCPtr(robot), name, key, key2), true) {
  }

  public override void activate() {
    AriaCSPINVOKE.ArModeCamera_activate(swigCPtr);
  }

  public override void deactivate() {
    AriaCSPINVOKE.ArModeCamera_deactivate(swigCPtr);
  }

  public override void userTask() {
    AriaCSPINVOKE.ArModeCamera_userTask(swigCPtr);
  }

  public override void help() {
    AriaCSPINVOKE.ArModeCamera_help(swigCPtr);
  }

  public void up() {
    AriaCSPINVOKE.ArModeCamera_up(swigCPtr);
  }

  public void down() {
    AriaCSPINVOKE.ArModeCamera_down(swigCPtr);
  }

  public void left() {
    AriaCSPINVOKE.ArModeCamera_left(swigCPtr);
  }

  public void right() {
    AriaCSPINVOKE.ArModeCamera_right(swigCPtr);
  }

  public void center() {
    AriaCSPINVOKE.ArModeCamera_center(swigCPtr);
  }

  public void zoomIn() {
    AriaCSPINVOKE.ArModeCamera_zoomIn(swigCPtr);
  }

  public void zoomOut() {
    AriaCSPINVOKE.ArModeCamera_zoomOut(swigCPtr);
  }

  public void exercise() {
    AriaCSPINVOKE.ArModeCamera_exercise(swigCPtr);
  }

  public void toggleAutoFocus() {
    AriaCSPINVOKE.ArModeCamera_toggleAutoFocus(swigCPtr);
  }

  public void sony() {
    AriaCSPINVOKE.ArModeCamera_sony(swigCPtr);
  }

  public void canon() {
    AriaCSPINVOKE.ArModeCamera_canon(swigCPtr);
  }

  public void dpptu() {
    AriaCSPINVOKE.ArModeCamera_dpptu(swigCPtr);
  }

  public void amptu() {
    AriaCSPINVOKE.ArModeCamera_amptu(swigCPtr);
  }

  public void canonInverted() {
    AriaCSPINVOKE.ArModeCamera_canonInverted(swigCPtr);
  }

  public void sonySerial() {
    AriaCSPINVOKE.ArModeCamera_sonySerial(swigCPtr);
  }

  public void canonSerial() {
    AriaCSPINVOKE.ArModeCamera_canonSerial(swigCPtr);
  }

  public void dpptuSerial() {
    AriaCSPINVOKE.ArModeCamera_dpptuSerial(swigCPtr);
  }

  public void amptuSerial() {
    AriaCSPINVOKE.ArModeCamera_amptuSerial(swigCPtr);
  }

  public void canonInvertedSerial() {
    AriaCSPINVOKE.ArModeCamera_canonInvertedSerial(swigCPtr);
  }

  public void rvisionSerial() {
    AriaCSPINVOKE.ArModeCamera_rvisionSerial(swigCPtr);
  }

  public void com1() {
    AriaCSPINVOKE.ArModeCamera_com1(swigCPtr);
  }

  public void com2() {
    AriaCSPINVOKE.ArModeCamera_com2(swigCPtr);
  }

  public void com3() {
    AriaCSPINVOKE.ArModeCamera_com3(swigCPtr);
  }

  public void com4() {
    AriaCSPINVOKE.ArModeCamera_com4(swigCPtr);
  }

  public void usb0() {
    AriaCSPINVOKE.ArModeCamera_usb0(swigCPtr);
  }

  public void usb9() {
    AriaCSPINVOKE.ArModeCamera_usb9(swigCPtr);
  }

  public void aux1() {
    AriaCSPINVOKE.ArModeCamera_aux1(swigCPtr);
  }

  public void aux2() {
    AriaCSPINVOKE.ArModeCamera_aux2(swigCPtr);
  }

}

}
