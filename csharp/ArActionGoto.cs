//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.8
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace AriaCS {

public class ArActionGoto : ArAction {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  public ArActionGoto(global::System.IntPtr cPtr, bool cMemoryOwn) : base(AriaCSPINVOKE.ArActionGoto_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  public static global::System.Runtime.InteropServices.HandleRef getCPtr(ArActionGoto obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~ArActionGoto() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          AriaCSPINVOKE.delete_ArActionGoto(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public ArActionGoto(string name, ArPose goal, double closeDist, double speed, double speedToTurnAt, double turnAmount) : this(AriaCSPINVOKE.new_ArActionGoto__SWIG_0(name, ArPose.getCPtr(goal), closeDist, speed, speedToTurnAt, turnAmount), true) {
    if (AriaCSPINVOKE.SWIGPendingException.Pending) throw AriaCSPINVOKE.SWIGPendingException.Retrieve();
  }

  public ArActionGoto(string name, ArPose goal, double closeDist, double speed, double speedToTurnAt) : this(AriaCSPINVOKE.new_ArActionGoto__SWIG_1(name, ArPose.getCPtr(goal), closeDist, speed, speedToTurnAt), true) {
    if (AriaCSPINVOKE.SWIGPendingException.Pending) throw AriaCSPINVOKE.SWIGPendingException.Retrieve();
  }

  public ArActionGoto(string name, ArPose goal, double closeDist, double speed) : this(AriaCSPINVOKE.new_ArActionGoto__SWIG_2(name, ArPose.getCPtr(goal), closeDist, speed), true) {
    if (AriaCSPINVOKE.SWIGPendingException.Pending) throw AriaCSPINVOKE.SWIGPendingException.Retrieve();
  }

  public ArActionGoto(string name, ArPose goal, double closeDist) : this(AriaCSPINVOKE.new_ArActionGoto__SWIG_3(name, ArPose.getCPtr(goal), closeDist), true) {
    if (AriaCSPINVOKE.SWIGPendingException.Pending) throw AriaCSPINVOKE.SWIGPendingException.Retrieve();
  }

  public ArActionGoto(string name, ArPose goal) : this(AriaCSPINVOKE.new_ArActionGoto__SWIG_4(name, ArPose.getCPtr(goal)), true) {
    if (AriaCSPINVOKE.SWIGPendingException.Pending) throw AriaCSPINVOKE.SWIGPendingException.Retrieve();
  }

  public ArActionGoto(string name) : this(AriaCSPINVOKE.new_ArActionGoto__SWIG_5(name), true) {
  }

  public ArActionGoto() : this(AriaCSPINVOKE.new_ArActionGoto__SWIG_6(), true) {
  }

  public bool haveAchievedGoal() {
    bool ret = AriaCSPINVOKE.ArActionGoto_haveAchievedGoal(swigCPtr);
    return ret;
  }

  public void cancelGoal() {
    AriaCSPINVOKE.ArActionGoto_cancelGoal(swigCPtr);
  }

  public void setGoal(ArPose goal) {
    AriaCSPINVOKE.ArActionGoto_setGoal(swigCPtr, ArPose.getCPtr(goal));
    if (AriaCSPINVOKE.SWIGPendingException.Pending) throw AriaCSPINVOKE.SWIGPendingException.Retrieve();
  }

  public ArPose getGoal() {
    ArPose ret = new ArPose(AriaCSPINVOKE.ArActionGoto_getGoal(swigCPtr), true);
    return ret;
  }

  public void setCloseDist(double closeDist) {
    AriaCSPINVOKE.ArActionGoto_setCloseDist(swigCPtr, closeDist);
  }

  public double getCloseDist() {
    double ret = AriaCSPINVOKE.ArActionGoto_getCloseDist(swigCPtr);
    return ret;
  }

  public void setSpeed(double speed) {
    AriaCSPINVOKE.ArActionGoto_setSpeed(swigCPtr, speed);
  }

  public double getSpeed() {
    double ret = AriaCSPINVOKE.ArActionGoto_getSpeed(swigCPtr);
    return ret;
  }

  public override ArActionDesired fire(ArActionDesired currentDesired) {
    global::System.IntPtr cPtr = AriaCSPINVOKE.ArActionGoto_fire(swigCPtr, ArActionDesired.getCPtr(currentDesired));
    ArActionDesired ret = (cPtr == global::System.IntPtr.Zero) ? null : new ArActionDesired(cPtr, false);
    if (AriaCSPINVOKE.SWIGPendingException.Pending) throw AriaCSPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public override ArActionDesired getDesired() {
    global::System.IntPtr cPtr = AriaCSPINVOKE.ArActionGoto_getDesired(swigCPtr);
    ArActionDesired ret = (cPtr == global::System.IntPtr.Zero) ? null : new ArActionDesired(cPtr, false);
    return ret;
  }

}

}
