//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.8
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace AriaCS {

public class ArSyncTask : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  public ArSyncTask(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  public static global::System.Runtime.InteropServices.HandleRef getCPtr(ArSyncTask obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~ArSyncTask() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          AriaCSPINVOKE.delete_ArSyncTask(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public ArSyncTask(string name, ArFunctor functor, SWIGTYPE_p_ArTaskState__State state, ArSyncTask parent) : this(AriaCSPINVOKE.new_ArSyncTask__SWIG_0(name, ArFunctor.getCPtr(functor), SWIGTYPE_p_ArTaskState__State.getCPtr(state), ArSyncTask.getCPtr(parent)), true) {
  }

  public ArSyncTask(string name, ArFunctor functor, SWIGTYPE_p_ArTaskState__State state) : this(AriaCSPINVOKE.new_ArSyncTask__SWIG_1(name, ArFunctor.getCPtr(functor), SWIGTYPE_p_ArTaskState__State.getCPtr(state)), true) {
  }

  public ArSyncTask(string name, ArFunctor functor) : this(AriaCSPINVOKE.new_ArSyncTask__SWIG_2(name, ArFunctor.getCPtr(functor)), true) {
  }

  public ArSyncTask(string name) : this(AriaCSPINVOKE.new_ArSyncTask__SWIG_3(name), true) {
  }

  public void run() {
    AriaCSPINVOKE.ArSyncTask_run(swigCPtr);
  }

  public void log(int depth) {
    AriaCSPINVOKE.ArSyncTask_log__SWIG_0(swigCPtr, depth);
  }

  public void log() {
    AriaCSPINVOKE.ArSyncTask_log__SWIG_1(swigCPtr);
  }

  public ArTaskState.State getState() {
    ArTaskState.State ret = (ArTaskState.State)AriaCSPINVOKE.ArSyncTask_getState(swigCPtr);
    return ret;
  }

  public void setState(ArTaskState.State state) {
    AriaCSPINVOKE.ArSyncTask_setState(swigCPtr, (int)state);
  }

  public ArSyncTask findNonRecursive(string name) {
    global::System.IntPtr cPtr = AriaCSPINVOKE.ArSyncTask_findNonRecursive__SWIG_0(swigCPtr, name);
    ArSyncTask ret = (cPtr == global::System.IntPtr.Zero) ? null : new ArSyncTask(cPtr, false);
    return ret;
  }

  public ArSyncTask findNonRecursive(ArFunctor functor) {
    global::System.IntPtr cPtr = AriaCSPINVOKE.ArSyncTask_findNonRecursive__SWIG_1(swigCPtr, ArFunctor.getCPtr(functor));
    ArSyncTask ret = (cPtr == global::System.IntPtr.Zero) ? null : new ArSyncTask(cPtr, false);
    return ret;
  }

  public ArSyncTask find(string name) {
    global::System.IntPtr cPtr = AriaCSPINVOKE.ArSyncTask_find__SWIG_0(swigCPtr, name);
    ArSyncTask ret = (cPtr == global::System.IntPtr.Zero) ? null : new ArSyncTask(cPtr, false);
    return ret;
  }

  public ArSyncTask find(ArFunctor functor) {
    global::System.IntPtr cPtr = AriaCSPINVOKE.ArSyncTask_find__SWIG_1(swigCPtr, ArFunctor.getCPtr(functor));
    ArSyncTask ret = (cPtr == global::System.IntPtr.Zero) ? null : new ArSyncTask(cPtr, false);
    return ret;
  }

  public ArSyncTask getRunning() {
    global::System.IntPtr cPtr = AriaCSPINVOKE.ArSyncTask_getRunning(swigCPtr);
    ArSyncTask ret = (cPtr == global::System.IntPtr.Zero) ? null : new ArSyncTask(cPtr, false);
    return ret;
  }

  public void addNewBranch(string nameOfNew, int position, SWIGTYPE_p_ArTaskState__State state) {
    AriaCSPINVOKE.ArSyncTask_addNewBranch__SWIG_0(swigCPtr, nameOfNew, position, SWIGTYPE_p_ArTaskState__State.getCPtr(state));
  }

  public void addNewBranch(string nameOfNew, int position) {
    AriaCSPINVOKE.ArSyncTask_addNewBranch__SWIG_1(swigCPtr, nameOfNew, position);
  }

  public void addNewLeaf(string nameOfNew, int position, ArFunctor functor, SWIGTYPE_p_ArTaskState__State state) {
    AriaCSPINVOKE.ArSyncTask_addNewLeaf__SWIG_0(swigCPtr, nameOfNew, position, ArFunctor.getCPtr(functor), SWIGTYPE_p_ArTaskState__State.getCPtr(state));
  }

  public void addNewLeaf(string nameOfNew, int position, ArFunctor functor) {
    AriaCSPINVOKE.ArSyncTask_addNewLeaf__SWIG_1(swigCPtr, nameOfNew, position, ArFunctor.getCPtr(functor));
  }

  public string getName() {
    string ret = AriaCSPINVOKE.ArSyncTask_getName(swigCPtr);
    return ret;
  }

  public ArFunctor getFunctor() {
    global::System.IntPtr cPtr = AriaCSPINVOKE.ArSyncTask_getFunctor(swigCPtr);
    ArFunctor ret = (cPtr == global::System.IntPtr.Zero) ? null : new ArFunctor(cPtr, false);
    return ret;
  }

  public void setWarningTimeCB(ArRetFunctor_UnsignedInt functor) {
    AriaCSPINVOKE.ArSyncTask_setWarningTimeCB(swigCPtr, ArRetFunctor_UnsignedInt.getCPtr(functor));
  }

  public ArRetFunctor_UnsignedInt getWarningTimeCB() {
    global::System.IntPtr cPtr = AriaCSPINVOKE.ArSyncTask_getWarningTimeCB(swigCPtr);
    ArRetFunctor_UnsignedInt ret = (cPtr == global::System.IntPtr.Zero) ? null : new ArRetFunctor_UnsignedInt(cPtr, false);
    return ret;
  }

  public void setNoTimeWarningCB(ArRetFunctor_Bool functor) {
    AriaCSPINVOKE.ArSyncTask_setNoTimeWarningCB(swigCPtr, ArRetFunctor_Bool.getCPtr(functor));
  }

  public ArRetFunctor_Bool getNoTimeWarningCB() {
    global::System.IntPtr cPtr = AriaCSPINVOKE.ArSyncTask_getNoTimeWarningCB(swigCPtr);
    ArRetFunctor_Bool ret = (cPtr == global::System.IntPtr.Zero) ? null : new ArRetFunctor_Bool(cPtr, false);
    return ret;
  }

  public void remove(ArSyncTask proc) {
    AriaCSPINVOKE.ArSyncTask_remove(swigCPtr, ArSyncTask.getCPtr(proc));
  }

  public bool isDeleting() {
    bool ret = AriaCSPINVOKE.ArSyncTask_isDeleting(swigCPtr);
    return ret;
  }

}

}
