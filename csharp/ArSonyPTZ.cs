//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.8
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace AriaCS {

public class ArSonyPTZ : ArPTZ {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  public ArSonyPTZ(global::System.IntPtr cPtr, bool cMemoryOwn) : base(AriaCSPINVOKE.ArSonyPTZ_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  public static global::System.Runtime.InteropServices.HandleRef getCPtr(ArSonyPTZ obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~ArSonyPTZ() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          AriaCSPINVOKE.delete_ArSonyPTZ(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public ArSonyPTZ(ArRobot robot) : this(AriaCSPINVOKE.new_ArSonyPTZ(ArRobot.getCPtr(robot)), true) {
  }

  public override bool init() {
    bool ret = AriaCSPINVOKE.ArSonyPTZ_init(swigCPtr);
    return ret;
  }

  public override string getTypeName() {
    string ret = AriaCSPINVOKE.ArSonyPTZ_getTypeName(swigCPtr);
    return ret;
  }

  public override bool canZoom() {
    bool ret = AriaCSPINVOKE.ArSonyPTZ_canZoom(swigCPtr);
    return ret;
  }

  public override bool zoom(int zoomValue) {
    bool ret = AriaCSPINVOKE.ArSonyPTZ_zoom(swigCPtr, zoomValue);
    return ret;
  }

  public override bool zoomRel(int zoomValue) {
    bool ret = AriaCSPINVOKE.ArSonyPTZ_zoomRel(swigCPtr, zoomValue);
    return ret;
  }

  public override int getZoom() {
    int ret = AriaCSPINVOKE.ArSonyPTZ_getZoom(swigCPtr);
    return ret;
  }

  public override bool canGetFOV() {
    bool ret = AriaCSPINVOKE.ArSonyPTZ_canGetFOV(swigCPtr);
    return ret;
  }

  public override double getFOVAtMaxZoom() {
    double ret = AriaCSPINVOKE.ArSonyPTZ_getFOVAtMaxZoom(swigCPtr);
    return ret;
  }

  public override double getFOVAtMinZoom() {
    double ret = AriaCSPINVOKE.ArSonyPTZ_getFOVAtMinZoom(swigCPtr);
    return ret;
  }

  public bool backLightingOn() {
    bool ret = AriaCSPINVOKE.ArSonyPTZ_backLightingOn(swigCPtr);
    return ret;
  }

  public bool backLightingOff() {
    bool ret = AriaCSPINVOKE.ArSonyPTZ_backLightingOff(swigCPtr);
    return ret;
  }

}

}
