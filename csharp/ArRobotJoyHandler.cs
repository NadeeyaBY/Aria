//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.8
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace AriaCS {

public class ArRobotJoyHandler : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  public ArRobotJoyHandler(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  public static global::System.Runtime.InteropServices.HandleRef getCPtr(ArRobotJoyHandler obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~ArRobotJoyHandler() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          AriaCSPINVOKE.delete_ArRobotJoyHandler(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public ArRobotJoyHandler(ArRobot robot) : this(AriaCSPINVOKE.new_ArRobotJoyHandler(ArRobot.getCPtr(robot)), true) {
  }

  public void getDoubles(out double x, out double y, out double z) {
    AriaCSPINVOKE.ArRobotJoyHandler_getDoubles(swigCPtr, out x, out y, out z);
  }

  public bool getButton1() {
    bool ret = AriaCSPINVOKE.ArRobotJoyHandler_getButton1(swigCPtr);
    return ret;
  }

  public bool getButton2() {
    bool ret = AriaCSPINVOKE.ArRobotJoyHandler_getButton2(swigCPtr);
    return ret;
  }

  public ArTime getDataReceivedTime() {
    ArTime ret = new ArTime(AriaCSPINVOKE.ArRobotJoyHandler_getDataReceivedTime(swigCPtr), true);
    return ret;
  }

  public bool gotData() {
    bool ret = AriaCSPINVOKE.ArRobotJoyHandler_gotData(swigCPtr);
    return ret;
  }

  public void addToConfig(ArConfig config, string section) {
    AriaCSPINVOKE.ArRobotJoyHandler_addToConfig(swigCPtr, ArConfig.getCPtr(config), section);
  }

  public int getRawX() {
    int ret = AriaCSPINVOKE.ArRobotJoyHandler_getRawX(swigCPtr);
    return ret;
  }

  public int getRawY() {
    int ret = AriaCSPINVOKE.ArRobotJoyHandler_getRawY(swigCPtr);
    return ret;
  }

  public int getRawThrottle() {
    int ret = AriaCSPINVOKE.ArRobotJoyHandler_getRawThrottle(swigCPtr);
    return ret;
  }

}

}
