//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.8
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace AriaCS {

public class ArConfigArg : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  public ArConfigArg(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  public static global::System.Runtime.InteropServices.HandleRef getCPtr(ArConfigArg obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~ArConfigArg() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          AriaCSPINVOKE.delete_ArConfigArg(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public static string LIST_BEGIN_TAG {
    set {
      AriaCSPINVOKE.ArConfigArg_LIST_BEGIN_TAG_set(value);
    } 
    get {
      string ret = AriaCSPINVOKE.ArConfigArg_LIST_BEGIN_TAG_get();
      return ret;
    } 
  }

  public static string LIST_END_TAG {
    set {
      AriaCSPINVOKE.ArConfigArg_LIST_END_TAG_set(value);
    } 
    get {
      string ret = AriaCSPINVOKE.ArConfigArg_LIST_END_TAG_get();
      return ret;
    } 
  }

  public static string NULL_TAG {
    set {
      AriaCSPINVOKE.ArConfigArg_NULL_TAG_set(value);
    } 
    get {
      string ret = AriaCSPINVOKE.ArConfigArg_NULL_TAG_get();
      return ret;
    } 
  }

  public static string NEW_RESOURCE_TAG {
    set {
      AriaCSPINVOKE.ArConfigArg_NEW_RESOURCE_TAG_set(value);
    } 
    get {
      string ret = AriaCSPINVOKE.ArConfigArg_NEW_RESOURCE_TAG_get();
      return ret;
    } 
  }

  public static string toString(ArConfigArg.Type t) {
    string ret = AriaCSPINVOKE.ArConfigArg_toString__SWIG_0((int)t);
    return ret;
  }

  public static string toString(ArConfigArg.RestartLevel r) {
    string ret = AriaCSPINVOKE.ArConfigArg_toString__SWIG_1((int)r);
    return ret;
  }

  public static ArConfigArg.Type typeFromString(string text) {
    ArConfigArg.Type ret = (ArConfigArg.Type)AriaCSPINVOKE.ArConfigArg_typeFromString(text);
    return ret;
  }

  public static ArConfigArg.RestartLevel restartLevelFromString(string text) {
    ArConfigArg.RestartLevel ret = (ArConfigArg.RestartLevel)AriaCSPINVOKE.ArConfigArg_restartLevelFromString(text);
    return ret;
  }

  public static string parseResourceSectionName(ArArgumentBuilder arg, string logPrefix) {
    string ret = AriaCSPINVOKE.ArConfigArg_parseResourceSectionName__SWIG_0(ArArgumentBuilder.getCPtr(arg), logPrefix);
    return ret;
  }

  public static string parseResourceSectionName(ArArgumentBuilder arg) {
    string ret = AriaCSPINVOKE.ArConfigArg_parseResourceSectionName__SWIG_1(ArArgumentBuilder.getCPtr(arg));
    return ret;
  }

  public static string parseResourceArgName(ArArgumentBuilder arg, string logPrefix) {
    string ret = AriaCSPINVOKE.ArConfigArg_parseResourceArgName__SWIG_0(ArArgumentBuilder.getCPtr(arg), logPrefix);
    return ret;
  }

  public static string parseResourceArgName(ArArgumentBuilder arg) {
    string ret = AriaCSPINVOKE.ArConfigArg_parseResourceArgName__SWIG_1(ArArgumentBuilder.getCPtr(arg));
    return ret;
  }

  public static ArConfigArg.Type parseResourceType(ArArgumentBuilder arg, string logPrefix) {
    ArConfigArg.Type ret = (ArConfigArg.Type)AriaCSPINVOKE.ArConfigArg_parseResourceType__SWIG_0(ArArgumentBuilder.getCPtr(arg), logPrefix);
    return ret;
  }

  public static ArConfigArg.Type parseResourceType(ArArgumentBuilder arg) {
    ArConfigArg.Type ret = (ArConfigArg.Type)AriaCSPINVOKE.ArConfigArg_parseResourceType__SWIG_1(ArArgumentBuilder.getCPtr(arg));
    return ret;
  }

  public static bool isResourceTopLevel(ArArgumentBuilder arg, string logPrefix) {
    bool ret = AriaCSPINVOKE.ArConfigArg_isResourceTopLevel__SWIG_0(ArArgumentBuilder.getCPtr(arg), logPrefix);
    return ret;
  }

  public static bool isResourceTopLevel(ArArgumentBuilder arg) {
    bool ret = AriaCSPINVOKE.ArConfigArg_isResourceTopLevel__SWIG_1(ArArgumentBuilder.getCPtr(arg));
    return ret;
  }

  public static SWIGTYPE_p_std__listT_std__string_t parseResourceParentPath(ArArgumentBuilder arg, char separator, string logPrefix) {
    SWIGTYPE_p_std__listT_std__string_t ret = new SWIGTYPE_p_std__listT_std__string_t(AriaCSPINVOKE.ArConfigArg_parseResourceParentPath__SWIG_0(ArArgumentBuilder.getCPtr(arg), separator, logPrefix), true);
    return ret;
  }

  public static SWIGTYPE_p_std__listT_std__string_t parseResourceParentPath(ArArgumentBuilder arg, char separator) {
    SWIGTYPE_p_std__listT_std__string_t ret = new SWIGTYPE_p_std__listT_std__string_t(AriaCSPINVOKE.ArConfigArg_parseResourceParentPath__SWIG_1(ArArgumentBuilder.getCPtr(arg), separator), true);
    return ret;
  }

  public static SWIGTYPE_p_std__listT_std__string_t parseResourceParentPath(ArArgumentBuilder arg) {
    SWIGTYPE_p_std__listT_std__string_t ret = new SWIGTYPE_p_std__listT_std__string_t(AriaCSPINVOKE.ArConfigArg_parseResourceParentPath__SWIG_2(ArArgumentBuilder.getCPtr(arg)), true);
    return ret;
  }

  public static string parseResourceDescription(ArArgumentBuilder arg, string logPrefix) {
    string ret = AriaCSPINVOKE.ArConfigArg_parseResourceDescription__SWIG_0(ArArgumentBuilder.getCPtr(arg), logPrefix);
    return ret;
  }

  public static string parseResourceDescription(ArArgumentBuilder arg) {
    string ret = AriaCSPINVOKE.ArConfigArg_parseResourceDescription__SWIG_1(ArArgumentBuilder.getCPtr(arg));
    return ret;
  }

  public static string parseResourceExtra(ArArgumentBuilder arg, string logPrefix) {
    string ret = AriaCSPINVOKE.ArConfigArg_parseResourceExtra__SWIG_0(ArArgumentBuilder.getCPtr(arg), logPrefix);
    return ret;
  }

  public static string parseResourceExtra(ArArgumentBuilder arg) {
    string ret = AriaCSPINVOKE.ArConfigArg_parseResourceExtra__SWIG_1(ArArgumentBuilder.getCPtr(arg));
    return ret;
  }

  public ArConfigArg() : this(AriaCSPINVOKE.new_ArConfigArg__SWIG_0(), true) {
  }

  public ArConfigArg(string name, SWIGTYPE_p_int pointer, string description, int minInt) : this(AriaCSPINVOKE.new_ArConfigArg__SWIG_1(name, SWIGTYPE_p_int.getCPtr(pointer), description, minInt), true) {
  }

  public ArConfigArg(string name, SWIGTYPE_p_int pointer, string description) : this(AriaCSPINVOKE.new_ArConfigArg__SWIG_2(name, SWIGTYPE_p_int.getCPtr(pointer), description), true) {
  }

  public ArConfigArg(string name, SWIGTYPE_p_int pointer) : this(AriaCSPINVOKE.new_ArConfigArg__SWIG_3(name, SWIGTYPE_p_int.getCPtr(pointer)), true) {
  }

  public ArConfigArg(string name, SWIGTYPE_p_short pointer, string description, int minInt) : this(AriaCSPINVOKE.new_ArConfigArg__SWIG_4(name, SWIGTYPE_p_short.getCPtr(pointer), description, minInt), true) {
  }

  public ArConfigArg(string name, SWIGTYPE_p_short pointer, string description) : this(AriaCSPINVOKE.new_ArConfigArg__SWIG_5(name, SWIGTYPE_p_short.getCPtr(pointer), description), true) {
  }

  public ArConfigArg(string name, SWIGTYPE_p_short pointer) : this(AriaCSPINVOKE.new_ArConfigArg__SWIG_6(name, SWIGTYPE_p_short.getCPtr(pointer)), true) {
  }

  public ArConfigArg(string name, SWIGTYPE_p_unsigned_short pointer, string description, int minInt) : this(AriaCSPINVOKE.new_ArConfigArg__SWIG_7(name, SWIGTYPE_p_unsigned_short.getCPtr(pointer), description, minInt), true) {
  }

  public ArConfigArg(string name, SWIGTYPE_p_unsigned_short pointer, string description) : this(AriaCSPINVOKE.new_ArConfigArg__SWIG_8(name, SWIGTYPE_p_unsigned_short.getCPtr(pointer), description), true) {
  }

  public ArConfigArg(string name, SWIGTYPE_p_unsigned_short pointer) : this(AriaCSPINVOKE.new_ArConfigArg__SWIG_9(name, SWIGTYPE_p_unsigned_short.getCPtr(pointer)), true) {
  }

  public ArConfigArg(string name, SWIGTYPE_p_unsigned_char pointer, string description, int minInt) : this(AriaCSPINVOKE.new_ArConfigArg__SWIG_10(name, SWIGTYPE_p_unsigned_char.getCPtr(pointer), description, minInt), true) {
  }

  public ArConfigArg(string name, SWIGTYPE_p_unsigned_char pointer, string description) : this(AriaCSPINVOKE.new_ArConfigArg__SWIG_11(name, SWIGTYPE_p_unsigned_char.getCPtr(pointer), description), true) {
  }

  public ArConfigArg(string name, SWIGTYPE_p_unsigned_char pointer) : this(AriaCSPINVOKE.new_ArConfigArg__SWIG_12(name, SWIGTYPE_p_unsigned_char.getCPtr(pointer)), true) {
  }

  public ArConfigArg(string name, SWIGTYPE_p_double pointer, string description, double minDouble, double maxDouble, int precision) : this(AriaCSPINVOKE.new_ArConfigArg__SWIG_13(name, SWIGTYPE_p_double.getCPtr(pointer), description, minDouble, maxDouble, precision), true) {
  }

  public ArConfigArg(string name, SWIGTYPE_p_double pointer, string description, double minDouble) : this(AriaCSPINVOKE.new_ArConfigArg__SWIG_14(name, SWIGTYPE_p_double.getCPtr(pointer), description, minDouble), true) {
  }

  public ArConfigArg(string name, SWIGTYPE_p_double pointer, string description) : this(AriaCSPINVOKE.new_ArConfigArg__SWIG_15(name, SWIGTYPE_p_double.getCPtr(pointer), description), true) {
  }

  public ArConfigArg(string name, SWIGTYPE_p_double pointer) : this(AriaCSPINVOKE.new_ArConfigArg__SWIG_16(name, SWIGTYPE_p_double.getCPtr(pointer)), true) {
  }

  public ArConfigArg(string name, SWIGTYPE_p_bool pointer) : this(AriaCSPINVOKE.new_ArConfigArg__SWIG_17(name, SWIGTYPE_p_bool.getCPtr(pointer)), true) {
  }

  public ArConfigArg(string name, string str, string description, uint maxStrLen) : this(AriaCSPINVOKE.new_ArConfigArg__SWIG_18(name, str, description, maxStrLen), true) {
  }

  public ArConfigArg(string name, string str, string description) : this(AriaCSPINVOKE.new_ArConfigArg__SWIG_19(name, str, description), true) {
  }

  public ArConfigArg(string name, SWIGTYPE_p_std__string str, string description) : this(AriaCSPINVOKE.new_ArConfigArg__SWIG_20(name, SWIGTYPE_p_std__string.getCPtr(str), description), true) {
  }

  public ArConfigArg(string name, int val, string description, int minInt, int maxInt) : this(AriaCSPINVOKE.new_ArConfigArg__SWIG_21(name, val, description, minInt, maxInt), true) {
  }

  public ArConfigArg(string name, int val, string description, int minInt) : this(AriaCSPINVOKE.new_ArConfigArg__SWIG_22(name, val, description, minInt), true) {
  }

  public ArConfigArg(string name, int val, string description) : this(AriaCSPINVOKE.new_ArConfigArg__SWIG_23(name, val, description), true) {
  }

  public ArConfigArg(string name, int val) : this(AriaCSPINVOKE.new_ArConfigArg__SWIG_24(name, val), true) {
  }

  public ArConfigArg(string name, double val, string description, double minDouble, double maxDouble, int precision) : this(AriaCSPINVOKE.new_ArConfigArg__SWIG_25(name, val, description, minDouble, maxDouble, precision), true) {
  }

  public ArConfigArg(string name, double val, string description, double minDouble, double maxDouble) : this(AriaCSPINVOKE.new_ArConfigArg__SWIG_26(name, val, description, minDouble, maxDouble), true) {
  }

  public ArConfigArg(string name, double val, string description, double minDouble) : this(AriaCSPINVOKE.new_ArConfigArg__SWIG_27(name, val, description, minDouble), true) {
  }

  public ArConfigArg(string name, double val, string description) : this(AriaCSPINVOKE.new_ArConfigArg__SWIG_28(name, val, description), true) {
  }

  public ArConfigArg(string name, double val) : this(AriaCSPINVOKE.new_ArConfigArg__SWIG_29(name, val), true) {
  }

  public ArConfigArg(string name, bool val, string description) : this(AriaCSPINVOKE.new_ArConfigArg__SWIG_30(name, val, description), true) {
  }

  public ArConfigArg(string name, bool val) : this(AriaCSPINVOKE.new_ArConfigArg__SWIG_31(name, val), true) {
  }

  public ArConfigArg(string name, ArRetFunctor1_Bool_ArgumentBuilderP setFunctor, SWIGTYPE_p_ArRetFunctorT_std__listT_ArArgumentBuilder_p_t_const_p_t getFunctor, string description) : this(AriaCSPINVOKE.new_ArConfigArg__SWIG_32(name, ArRetFunctor1_Bool_ArgumentBuilderP.getCPtr(setFunctor), SWIGTYPE_p_ArRetFunctorT_std__listT_ArArgumentBuilder_p_t_const_p_t.getCPtr(getFunctor), description), true) {
  }

  public ArConfigArg(string str, ArConfigArg.Type type) : this(AriaCSPINVOKE.new_ArConfigArg__SWIG_33(str, (int)type), true) {
  }

  public ArConfigArg(string str) : this(AriaCSPINVOKE.new_ArConfigArg__SWIG_34(str), true) {
  }

  public ArConfigArg(string name, string str) : this(AriaCSPINVOKE.new_ArConfigArg__SWIG_35(name, str), true) {
  }

  public ArConfigArg(ArConfigArg.Type type, string name, string description) : this(AriaCSPINVOKE.new_ArConfigArg__SWIG_36((int)type, name, description), true) {
  }

  public ArConfigArg(ArConfigArg.Type type) : this(AriaCSPINVOKE.new_ArConfigArg__SWIG_37((int)type), true) {
  }

  public ArConfigArg(string argName, ArConfigArg arg) : this(AriaCSPINVOKE.new_ArConfigArg__SWIG_38(argName, ArConfigArg.getCPtr(arg)), true) {
    if (AriaCSPINVOKE.SWIGPendingException.Pending) throw AriaCSPINVOKE.SWIGPendingException.Retrieve();
  }

  public ArConfigArg(ArConfigArg arg) : this(AriaCSPINVOKE.new_ArConfigArg__SWIG_39(ArConfigArg.getCPtr(arg)), true) {
    if (AriaCSPINVOKE.SWIGPendingException.Pending) throw AriaCSPINVOKE.SWIGPendingException.Retrieve();
  }

  public void copyAndDetach(ArConfigArg arg) {
    AriaCSPINVOKE.ArConfigArg_copyAndDetach(swigCPtr, ArConfigArg.getCPtr(arg));
    if (AriaCSPINVOKE.SWIGPendingException.Pending) throw AriaCSPINVOKE.SWIGPendingException.Retrieve();
  }

  public bool copyTranslation(ArConfigArg arg) {
    bool ret = AriaCSPINVOKE.ArConfigArg_copyTranslation(swigCPtr, ArConfigArg.getCPtr(arg));
    if (AriaCSPINVOKE.SWIGPendingException.Pending) throw AriaCSPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool promoteList(ArConfigArg arg) {
    bool ret = AriaCSPINVOKE.ArConfigArg_promoteList(swigCPtr, ArConfigArg.getCPtr(arg));
    if (AriaCSPINVOKE.SWIGPendingException.Pending) throw AriaCSPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool isListType() {
    bool ret = AriaCSPINVOKE.ArConfigArg_isListType(swigCPtr);
    return ret;
  }

  public ArConfigArg.Type getType() {
    ArConfigArg.Type ret = (ArConfigArg.Type)AriaCSPINVOKE.ArConfigArg_getType(swigCPtr);
    return ret;
  }

  public string getName() {
    string ret = AriaCSPINVOKE.ArConfigArg_getName(swigCPtr);
    return ret;
  }

  public string getDescription() {
    string ret = AriaCSPINVOKE.ArConfigArg_getDescription(swigCPtr);
    return ret;
  }

  public void setDescription(string description) {
    AriaCSPINVOKE.ArConfigArg_setDescription(swigCPtr, description);
  }

  public void setExtraExplanation(string extraExplanation) {
    AriaCSPINVOKE.ArConfigArg_setExtraExplanation(swigCPtr, extraExplanation);
  }

  public string getExtraExplanation() {
    string ret = AriaCSPINVOKE.ArConfigArg_getExtraExplanation(swigCPtr);
    return ret;
  }

  public bool setInt(int val, string errorBuffer, uint errorBufferLen, bool doNotSet) {
    bool ret = AriaCSPINVOKE.ArConfigArg_setInt__SWIG_0(swigCPtr, val, errorBuffer, errorBufferLen, doNotSet);
    return ret;
  }

  public bool setInt(int val, string errorBuffer, uint errorBufferLen) {
    bool ret = AriaCSPINVOKE.ArConfigArg_setInt__SWIG_1(swigCPtr, val, errorBuffer, errorBufferLen);
    return ret;
  }

  public bool setInt(int val, string errorBuffer) {
    bool ret = AriaCSPINVOKE.ArConfigArg_setInt__SWIG_2(swigCPtr, val, errorBuffer);
    return ret;
  }

  public bool setInt(int val) {
    bool ret = AriaCSPINVOKE.ArConfigArg_setInt__SWIG_3(swigCPtr, val);
    return ret;
  }

  public bool setDouble(double val, string errorBuffer, uint errorBufferLen, bool doNotSet) {
    bool ret = AriaCSPINVOKE.ArConfigArg_setDouble__SWIG_0(swigCPtr, val, errorBuffer, errorBufferLen, doNotSet);
    return ret;
  }

  public bool setDouble(double val, string errorBuffer, uint errorBufferLen) {
    bool ret = AriaCSPINVOKE.ArConfigArg_setDouble__SWIG_1(swigCPtr, val, errorBuffer, errorBufferLen);
    return ret;
  }

  public bool setDouble(double val, string errorBuffer) {
    bool ret = AriaCSPINVOKE.ArConfigArg_setDouble__SWIG_2(swigCPtr, val, errorBuffer);
    return ret;
  }

  public bool setDouble(double val) {
    bool ret = AriaCSPINVOKE.ArConfigArg_setDouble__SWIG_3(swigCPtr, val);
    return ret;
  }

  public bool setBool(bool val, string errorBuffer, uint errorBufferLen, bool doNotSet) {
    bool ret = AriaCSPINVOKE.ArConfigArg_setBool__SWIG_0(swigCPtr, val, errorBuffer, errorBufferLen, doNotSet);
    return ret;
  }

  public bool setBool(bool val, string errorBuffer, uint errorBufferLen) {
    bool ret = AriaCSPINVOKE.ArConfigArg_setBool__SWIG_1(swigCPtr, val, errorBuffer, errorBufferLen);
    return ret;
  }

  public bool setBool(bool val, string errorBuffer) {
    bool ret = AriaCSPINVOKE.ArConfigArg_setBool__SWIG_2(swigCPtr, val, errorBuffer);
    return ret;
  }

  public bool setBool(bool val) {
    bool ret = AriaCSPINVOKE.ArConfigArg_setBool__SWIG_3(swigCPtr, val);
    return ret;
  }

  public bool setString(string str, string errorBuffer, uint errorBufferLen, bool doNotSet) {
    bool ret = AriaCSPINVOKE.ArConfigArg_setString__SWIG_0(swigCPtr, str, errorBuffer, errorBufferLen, doNotSet);
    return ret;
  }

  public bool setString(string str, string errorBuffer, uint errorBufferLen) {
    bool ret = AriaCSPINVOKE.ArConfigArg_setString__SWIG_1(swigCPtr, str, errorBuffer, errorBufferLen);
    return ret;
  }

  public bool setString(string str, string errorBuffer) {
    bool ret = AriaCSPINVOKE.ArConfigArg_setString__SWIG_2(swigCPtr, str, errorBuffer);
    return ret;
  }

  public bool setString(string str) {
    bool ret = AriaCSPINVOKE.ArConfigArg_setString__SWIG_3(swigCPtr, str);
    return ret;
  }

  public bool setCppString(string str, string errorBuffer, uint errorBufferLen, bool doNotSet) {
    bool ret = AriaCSPINVOKE.ArConfigArg_setCppString__SWIG_0(swigCPtr, str, errorBuffer, errorBufferLen, doNotSet);
    if (AriaCSPINVOKE.SWIGPendingException.Pending) throw AriaCSPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool setCppString(string str, string errorBuffer, uint errorBufferLen) {
    bool ret = AriaCSPINVOKE.ArConfigArg_setCppString__SWIG_1(swigCPtr, str, errorBuffer, errorBufferLen);
    if (AriaCSPINVOKE.SWIGPendingException.Pending) throw AriaCSPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool setCppString(string str, string errorBuffer) {
    bool ret = AriaCSPINVOKE.ArConfigArg_setCppString__SWIG_2(swigCPtr, str, errorBuffer);
    if (AriaCSPINVOKE.SWIGPendingException.Pending) throw AriaCSPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool setCppString(string str) {
    bool ret = AriaCSPINVOKE.ArConfigArg_setCppString__SWIG_3(swigCPtr, str);
    if (AriaCSPINVOKE.SWIGPendingException.Pending) throw AriaCSPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool setArgWithFunctor(ArArgumentBuilder argument, string errorBuffer, uint errorBufferLen, bool doNotSet) {
    bool ret = AriaCSPINVOKE.ArConfigArg_setArgWithFunctor__SWIG_0(swigCPtr, ArArgumentBuilder.getCPtr(argument), errorBuffer, errorBufferLen, doNotSet);
    return ret;
  }

  public bool setArgWithFunctor(ArArgumentBuilder argument, string errorBuffer, uint errorBufferLen) {
    bool ret = AriaCSPINVOKE.ArConfigArg_setArgWithFunctor__SWIG_1(swigCPtr, ArArgumentBuilder.getCPtr(argument), errorBuffer, errorBufferLen);
    return ret;
  }

  public bool setArgWithFunctor(ArArgumentBuilder argument, string errorBuffer) {
    bool ret = AriaCSPINVOKE.ArConfigArg_setArgWithFunctor__SWIG_2(swigCPtr, ArArgumentBuilder.getCPtr(argument), errorBuffer);
    return ret;
  }

  public bool setArgWithFunctor(ArArgumentBuilder argument) {
    bool ret = AriaCSPINVOKE.ArConfigArg_setArgWithFunctor__SWIG_3(swigCPtr, ArArgumentBuilder.getCPtr(argument));
    return ret;
  }

  public int getInt(SWIGTYPE_p_bool ok) {
    int ret = AriaCSPINVOKE.ArConfigArg_getInt__SWIG_0(swigCPtr, SWIGTYPE_p_bool.getCPtr(ok));
    return ret;
  }

  public int getInt() {
    int ret = AriaCSPINVOKE.ArConfigArg_getInt__SWIG_1(swigCPtr);
    return ret;
  }

  public int getMinInt(SWIGTYPE_p_bool ok) {
    int ret = AriaCSPINVOKE.ArConfigArg_getMinInt__SWIG_0(swigCPtr, SWIGTYPE_p_bool.getCPtr(ok));
    return ret;
  }

  public int getMinInt() {
    int ret = AriaCSPINVOKE.ArConfigArg_getMinInt__SWIG_1(swigCPtr);
    return ret;
  }

  public int getMaxInt(SWIGTYPE_p_bool ok) {
    int ret = AriaCSPINVOKE.ArConfigArg_getMaxInt__SWIG_0(swigCPtr, SWIGTYPE_p_bool.getCPtr(ok));
    return ret;
  }

  public int getMaxInt() {
    int ret = AriaCSPINVOKE.ArConfigArg_getMaxInt__SWIG_1(swigCPtr);
    return ret;
  }

  public double getDouble(SWIGTYPE_p_bool ok) {
    double ret = AriaCSPINVOKE.ArConfigArg_getDouble__SWIG_0(swigCPtr, SWIGTYPE_p_bool.getCPtr(ok));
    return ret;
  }

  public double getDouble() {
    double ret = AriaCSPINVOKE.ArConfigArg_getDouble__SWIG_1(swigCPtr);
    return ret;
  }

  public double getMinDouble(SWIGTYPE_p_bool ok) {
    double ret = AriaCSPINVOKE.ArConfigArg_getMinDouble__SWIG_0(swigCPtr, SWIGTYPE_p_bool.getCPtr(ok));
    return ret;
  }

  public double getMinDouble() {
    double ret = AriaCSPINVOKE.ArConfigArg_getMinDouble__SWIG_1(swigCPtr);
    return ret;
  }

  public double getMaxDouble(SWIGTYPE_p_bool ok) {
    double ret = AriaCSPINVOKE.ArConfigArg_getMaxDouble__SWIG_0(swigCPtr, SWIGTYPE_p_bool.getCPtr(ok));
    return ret;
  }

  public double getMaxDouble() {
    double ret = AriaCSPINVOKE.ArConfigArg_getMaxDouble__SWIG_1(swigCPtr);
    return ret;
  }

  public int getDoublePrecision(SWIGTYPE_p_bool ok) {
    int ret = AriaCSPINVOKE.ArConfigArg_getDoublePrecision__SWIG_0(swigCPtr, SWIGTYPE_p_bool.getCPtr(ok));
    return ret;
  }

  public int getDoublePrecision() {
    int ret = AriaCSPINVOKE.ArConfigArg_getDoublePrecision__SWIG_1(swigCPtr);
    return ret;
  }

  public bool getBool(SWIGTYPE_p_bool ok) {
    bool ret = AriaCSPINVOKE.ArConfigArg_getBool__SWIG_0(swigCPtr, SWIGTYPE_p_bool.getCPtr(ok));
    return ret;
  }

  public bool getBool() {
    bool ret = AriaCSPINVOKE.ArConfigArg_getBool__SWIG_1(swigCPtr);
    return ret;
  }

  public string getString(SWIGTYPE_p_bool ok) {
    string ret = AriaCSPINVOKE.ArConfigArg_getString__SWIG_0(swigCPtr, SWIGTYPE_p_bool.getCPtr(ok));
    return ret;
  }

  public string getString() {
    string ret = AriaCSPINVOKE.ArConfigArg_getString__SWIG_1(swigCPtr);
    return ret;
  }

  public SWIGTYPE_p_std__listT_ArArgumentBuilder_p_t getArgsWithFunctor(SWIGTYPE_p_bool ok) {
    global::System.IntPtr cPtr = AriaCSPINVOKE.ArConfigArg_getArgsWithFunctor__SWIG_0(swigCPtr, SWIGTYPE_p_bool.getCPtr(ok));
    SWIGTYPE_p_std__listT_ArArgumentBuilder_p_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_std__listT_ArArgumentBuilder_p_t(cPtr, false);
    return ret;
  }

  public SWIGTYPE_p_std__listT_ArArgumentBuilder_p_t getArgsWithFunctor() {
    global::System.IntPtr cPtr = AriaCSPINVOKE.ArConfigArg_getArgsWithFunctor__SWIG_1(swigCPtr);
    SWIGTYPE_p_std__listT_ArArgumentBuilder_p_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_std__listT_ArArgumentBuilder_p_t(cPtr, false);
    return ret;
  }

  public string getCppString(SWIGTYPE_p_bool ok) {
    string ret = AriaCSPINVOKE.ArConfigArg_getCppString__SWIG_0(swigCPtr, SWIGTYPE_p_bool.getCPtr(ok));
    return ret;
  }

  public string getCppString() {
    string ret = AriaCSPINVOKE.ArConfigArg_getCppString__SWIG_1(swigCPtr);
    return ret;
  }

  public SWIGTYPE_p_std__string getCppStringPtr(SWIGTYPE_p_bool ok) {
    global::System.IntPtr cPtr = AriaCSPINVOKE.ArConfigArg_getCppStringPtr__SWIG_0(swigCPtr, SWIGTYPE_p_bool.getCPtr(ok));
    SWIGTYPE_p_std__string ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_std__string(cPtr, false);
    return ret;
  }

  public SWIGTYPE_p_std__string getCppStringPtr() {
    global::System.IntPtr cPtr = AriaCSPINVOKE.ArConfigArg_getCppStringPtr__SWIG_1(swigCPtr);
    SWIGTYPE_p_std__string ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_std__string(cPtr, false);
    return ret;
  }

  public bool addArg(ArConfigArg arg) {
    bool ret = AriaCSPINVOKE.ArConfigArg_addArg(swigCPtr, ArConfigArg.getCPtr(arg));
    if (AriaCSPINVOKE.SWIGPendingException.Pending) throw AriaCSPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool removeArg(ArConfigArg arg) {
    bool ret = AriaCSPINVOKE.ArConfigArg_removeArg(swigCPtr, ArConfigArg.getCPtr(arg));
    if (AriaCSPINVOKE.SWIGPendingException.Pending) throw AriaCSPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool hasArgs() {
    bool ret = AriaCSPINVOKE.ArConfigArg_hasArgs(swigCPtr);
    return ret;
  }

  public uint getArgCount() {
    uint ret = AriaCSPINVOKE.ArConfigArg_getArgCount(swigCPtr);
    return ret;
  }

  public uint getDescendantArgCount() {
    uint ret = AriaCSPINVOKE.ArConfigArg_getDescendantArgCount(swigCPtr);
    return ret;
  }

  public SWIGTYPE_p_std__listT_ArConfigArg_t getArgs(SWIGTYPE_p_bool ok) {
    SWIGTYPE_p_std__listT_ArConfigArg_t ret = new SWIGTYPE_p_std__listT_ArConfigArg_t(AriaCSPINVOKE.ArConfigArg_getArgs__SWIG_0(swigCPtr, SWIGTYPE_p_bool.getCPtr(ok)), true);
    return ret;
  }

  public SWIGTYPE_p_std__listT_ArConfigArg_t getArgs() {
    SWIGTYPE_p_std__listT_ArConfigArg_t ret = new SWIGTYPE_p_std__listT_ArConfigArg_t(AriaCSPINVOKE.ArConfigArg_getArgs__SWIG_1(swigCPtr), true);
    return ret;
  }

  public ArConfigArg getArg(uint index) {
    global::System.IntPtr cPtr = AriaCSPINVOKE.ArConfigArg_getArg__SWIG_0(swigCPtr, index);
    ArConfigArg ret = (cPtr == global::System.IntPtr.Zero) ? null : new ArConfigArg(cPtr, false);
    return ret;
  }

  public ArConfigArg findArg(string childParamName) {
    global::System.IntPtr cPtr = AriaCSPINVOKE.ArConfigArg_findArg__SWIG_0(swigCPtr, childParamName);
    ArConfigArg ret = (cPtr == global::System.IntPtr.Zero) ? null : new ArConfigArg(cPtr, false);
    return ret;
  }

  public bool getAncestorList(SWIGTYPE_p_std__listT_ArConfigArg_p_t ancestorListOut) {
    bool ret = AriaCSPINVOKE.ArConfigArg_getAncestorList(swigCPtr, SWIGTYPE_p_std__listT_ArConfigArg_p_t.getCPtr(ancestorListOut));
    return ret;
  }

  public ArConfigArg getTopLevelArg() {
    global::System.IntPtr cPtr = AriaCSPINVOKE.ArConfigArg_getTopLevelArg(swigCPtr);
    ArConfigArg ret = (cPtr == global::System.IntPtr.Zero) ? null : new ArConfigArg(cPtr, false);
    return ret;
  }

  public ArPriority.Priority getConfigPriority() {
    ArPriority.Priority ret = (ArPriority.Priority)AriaCSPINVOKE.ArConfigArg_getConfigPriority(swigCPtr);
    return ret;
  }

  public void setConfigPriority(ArPriority.Priority priority) {
    AriaCSPINVOKE.ArConfigArg_setConfigPriority(swigCPtr, (int)priority);
  }

  public string getDisplayHint() {
    string ret = AriaCSPINVOKE.ArConfigArg_getDisplayHint(swigCPtr);
    return ret;
  }

  public void setDisplayHint(string hintText) {
    AriaCSPINVOKE.ArConfigArg_setDisplayHint(swigCPtr, hintText);
  }

  public ArConfigArg.RestartLevel getRestartLevel() {
    ArConfigArg.RestartLevel ret = (ArConfigArg.RestartLevel)AriaCSPINVOKE.ArConfigArg_getRestartLevel(swigCPtr);
    return ret;
  }

  public void setRestartLevel(ArConfigArg.RestartLevel level) {
    AriaCSPINVOKE.ArConfigArg_setRestartLevel(swigCPtr, (int)level);
  }

  public bool getSuppressChanges() {
    bool ret = AriaCSPINVOKE.ArConfigArg_getSuppressChanges(swigCPtr);
    return ret;
  }

  public void setSuppressChanges(bool suppressChanges) {
    AriaCSPINVOKE.ArConfigArg_setSuppressChanges(swigCPtr, suppressChanges);
  }

  public bool isSerializable() {
    bool ret = AriaCSPINVOKE.ArConfigArg_isSerializable(swigCPtr);
    return ret;
  }

  public void setSerializable(bool isSerializable) {
    AriaCSPINVOKE.ArConfigArg_setSerializable(swigCPtr, isSerializable);
  }

  public ArConfigArg getParentArg() {
    global::System.IntPtr cPtr = AriaCSPINVOKE.ArConfigArg_getParentArg(swigCPtr);
    ArConfigArg ret = (cPtr == global::System.IntPtr.Zero) ? null : new ArConfigArg(cPtr, false);
    return ret;
  }

  public string getParentPathName(char separator) {
    string ret = AriaCSPINVOKE.ArConfigArg_getParentPathName__SWIG_0(swigCPtr, separator);
    return ret;
  }

  public string getParentPathName() {
    string ret = AriaCSPINVOKE.ArConfigArg_getParentPathName__SWIG_1(swigCPtr);
    return ret;
  }

  public static SWIGTYPE_p_std__listT_std__string_t splitParentPathName(string parentPathName, char separator) {
    SWIGTYPE_p_std__listT_std__string_t ret = new SWIGTYPE_p_std__listT_std__string_t(AriaCSPINVOKE.ArConfigArg_splitParentPathName__SWIG_0(parentPathName, separator), true);
    return ret;
  }

  public static SWIGTYPE_p_std__listT_std__string_t splitParentPathName(string parentPathName) {
    SWIGTYPE_p_std__listT_std__string_t ret = new SWIGTYPE_p_std__listT_std__string_t(AriaCSPINVOKE.ArConfigArg_splitParentPathName__SWIG_1(parentPathName), true);
    return ret;
  }

  public void replaceSpacesInName() {
    AriaCSPINVOKE.ArConfigArg_replaceSpacesInName(swigCPtr);
  }

  public bool hasMinBound() {
    bool ret = AriaCSPINVOKE.ArConfigArg_hasMinBound(swigCPtr);
    return ret;
  }

  public bool hasMaxBound() {
    bool ret = AriaCSPINVOKE.ArConfigArg_hasMaxBound(swigCPtr);
    return ret;
  }

  public void setIgnoreBounds(bool ignoreBounds) {
    AriaCSPINVOKE.ArConfigArg_setIgnoreBounds__SWIG_0(swigCPtr, ignoreBounds);
  }

  public void setIgnoreBounds() {
    AriaCSPINVOKE.ArConfigArg_setIgnoreBounds__SWIG_1(swigCPtr);
  }

  public bool hasExternalDataReference() {
    bool ret = AriaCSPINVOKE.ArConfigArg_hasExternalDataReference(swigCPtr);
    return ret;
  }

  public bool isPlaceholder() {
    bool ret = AriaCSPINVOKE.ArConfigArg_isPlaceholder(swigCPtr);
    return ret;
  }

  public bool addToFileParser(ArFileParser parser, SWIGTYPE_p_ArRetFunctor3CT_bool_ArConfig_ArArgumentBuilder_p_char_p_size_t_t parserCB, string logPrefix, bool isQuiet) {
    bool ret = AriaCSPINVOKE.ArConfigArg_addToFileParser__SWIG_0(swigCPtr, ArFileParser.getCPtr(parser), SWIGTYPE_p_ArRetFunctor3CT_bool_ArConfig_ArArgumentBuilder_p_char_p_size_t_t.getCPtr(parserCB), logPrefix, isQuiet);
    return ret;
  }

  public bool addToFileParser(ArFileParser parser, SWIGTYPE_p_ArRetFunctor3CT_bool_ArConfig_ArArgumentBuilder_p_char_p_size_t_t parserCB, string logPrefix) {
    bool ret = AriaCSPINVOKE.ArConfigArg_addToFileParser__SWIG_1(swigCPtr, ArFileParser.getCPtr(parser), SWIGTYPE_p_ArRetFunctor3CT_bool_ArConfig_ArArgumentBuilder_p_char_p_size_t_t.getCPtr(parserCB), logPrefix);
    return ret;
  }

  public bool addToFileParser(ArFileParser parser, SWIGTYPE_p_ArRetFunctor3CT_bool_ArConfig_ArArgumentBuilder_p_char_p_size_t_t parserCB) {
    bool ret = AriaCSPINVOKE.ArConfigArg_addToFileParser__SWIG_2(swigCPtr, ArFileParser.getCPtr(parser), SWIGTYPE_p_ArRetFunctor3CT_bool_ArConfig_ArArgumentBuilder_p_char_p_size_t_t.getCPtr(parserCB));
    return ret;
  }

  public bool parseArgument(ArArgumentBuilder arg, string errorBuffer, uint errorBufferLen, string logPrefix, bool isQuiet, SWIGTYPE_p_bool changed) {
    bool ret = AriaCSPINVOKE.ArConfigArg_parseArgument__SWIG_0(swigCPtr, ArArgumentBuilder.getCPtr(arg), errorBuffer, errorBufferLen, logPrefix, isQuiet, SWIGTYPE_p_bool.getCPtr(changed));
    return ret;
  }

  public bool parseArgument(ArArgumentBuilder arg, string errorBuffer, uint errorBufferLen, string logPrefix, bool isQuiet) {
    bool ret = AriaCSPINVOKE.ArConfigArg_parseArgument__SWIG_1(swigCPtr, ArArgumentBuilder.getCPtr(arg), errorBuffer, errorBufferLen, logPrefix, isQuiet);
    return ret;
  }

  public bool parseArgument(ArArgumentBuilder arg, string errorBuffer, uint errorBufferLen, string logPrefix) {
    bool ret = AriaCSPINVOKE.ArConfigArg_parseArgument__SWIG_2(swigCPtr, ArArgumentBuilder.getCPtr(arg), errorBuffer, errorBufferLen, logPrefix);
    return ret;
  }

  public bool parseArgument(ArArgumentBuilder arg, string errorBuffer, uint errorBufferLen) {
    bool ret = AriaCSPINVOKE.ArConfigArg_parseArgument__SWIG_3(swigCPtr, ArArgumentBuilder.getCPtr(arg), errorBuffer, errorBufferLen);
    return ret;
  }

  public bool writeArguments(SWIGTYPE_p_FILE file, string lineBuf, int lineBufSize, int startCommentColumn, bool isWriteExtra, string logPrefix, int indentLevel) {
    bool ret = AriaCSPINVOKE.ArConfigArg_writeArguments__SWIG_0(swigCPtr, SWIGTYPE_p_FILE.getCPtr(file), lineBuf, lineBufSize, startCommentColumn, isWriteExtra, logPrefix, indentLevel);
    return ret;
  }

  public bool writeArguments(SWIGTYPE_p_FILE file, string lineBuf, int lineBufSize, int startCommentColumn, bool isWriteExtra, string logPrefix) {
    bool ret = AriaCSPINVOKE.ArConfigArg_writeArguments__SWIG_1(swigCPtr, SWIGTYPE_p_FILE.getCPtr(file), lineBuf, lineBufSize, startCommentColumn, isWriteExtra, logPrefix);
    return ret;
  }

  public bool writeArguments(SWIGTYPE_p_FILE file, string lineBuf, int lineBufSize, int startCommentColumn, bool isWriteExtra) {
    bool ret = AriaCSPINVOKE.ArConfigArg_writeArguments__SWIG_2(swigCPtr, SWIGTYPE_p_FILE.getCPtr(file), lineBuf, lineBufSize, startCommentColumn, isWriteExtra);
    return ret;
  }

  public bool writeArguments(SWIGTYPE_p_FILE file, string lineBuf, int lineBufSize, int startCommentColumn) {
    bool ret = AriaCSPINVOKE.ArConfigArg_writeArguments__SWIG_3(swigCPtr, SWIGTYPE_p_FILE.getCPtr(file), lineBuf, lineBufSize, startCommentColumn);
    return ret;
  }

  public bool writeName(string lineBuf, int lineBufSize, int indentLevel) {
    bool ret = AriaCSPINVOKE.ArConfigArg_writeName(swigCPtr, lineBuf, lineBufSize, indentLevel);
    return ret;
  }

  public bool writeBounds(string line, uint lineLen, string logPrefix) {
    bool ret = AriaCSPINVOKE.ArConfigArg_writeBounds__SWIG_0(swigCPtr, line, lineLen, logPrefix);
    return ret;
  }

  public bool writeBounds(string line, uint lineLen) {
    bool ret = AriaCSPINVOKE.ArConfigArg_writeBounds__SWIG_1(swigCPtr, line, lineLen);
    return ret;
  }

  public static bool isNone(string argText) {
    bool ret = AriaCSPINVOKE.ArConfigArg_isNone(argText);
    return ret;
  }

  public bool parseSocket(ArArgumentBuilder args, string errorBuffer, uint errorBufferLen) {
    bool ret = AriaCSPINVOKE.ArConfigArg_parseSocket(swigCPtr, ArArgumentBuilder.getCPtr(args), errorBuffer, errorBufferLen);
    if (AriaCSPINVOKE.SWIGPendingException.Pending) throw AriaCSPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool writeValue(ArSocket socket, string intro) {
    bool ret = AriaCSPINVOKE.ArConfigArg_writeValue(swigCPtr, ArSocket.getCPtr(socket), intro);
    return ret;
  }

  public bool writeInfo(ArSocket socket, string intro) {
    bool ret = AriaCSPINVOKE.ArConfigArg_writeInfo(swigCPtr, ArSocket.getCPtr(socket), intro);
    return ret;
  }

  public void log(bool verbose, int indentCount, string logPrefix) {
    AriaCSPINVOKE.ArConfigArg_log__SWIG_0(swigCPtr, verbose, indentCount, logPrefix);
  }

  public void log(bool verbose, int indentCount) {
    AriaCSPINVOKE.ArConfigArg_log__SWIG_1(swigCPtr, verbose, indentCount);
  }

  public void log(bool verbose) {
    AriaCSPINVOKE.ArConfigArg_log__SWIG_2(swigCPtr, verbose);
  }

  public void log() {
    AriaCSPINVOKE.ArConfigArg_log__SWIG_3(swigCPtr);
  }

  public bool isValueEqual(ArConfigArg other) {
    bool ret = AriaCSPINVOKE.ArConfigArg_isValueEqual(swigCPtr, ArConfigArg.getCPtr(other));
    if (AriaCSPINVOKE.SWIGPendingException.Pending) throw AriaCSPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool setValue(ArConfigArg source, bool isVerifyArgNames) {
    bool ret = AriaCSPINVOKE.ArConfigArg_setValue__SWIG_0(swigCPtr, ArConfigArg.getCPtr(source), isVerifyArgNames);
    if (AriaCSPINVOKE.SWIGPendingException.Pending) throw AriaCSPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool setValue(ArConfigArg source) {
    bool ret = AriaCSPINVOKE.ArConfigArg_setValue__SWIG_1(swigCPtr, ArConfigArg.getCPtr(source));
    if (AriaCSPINVOKE.SWIGPendingException.Pending) throw AriaCSPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool isValueSet() {
    bool ret = AriaCSPINVOKE.ArConfigArg_isValueSet(swigCPtr);
    return ret;
  }

  public void clearValueSet() {
    AriaCSPINVOKE.ArConfigArg_clearValueSet(swigCPtr);
  }

  public void setValueSet() {
    AriaCSPINVOKE.ArConfigArg_setValueSet(swigCPtr);
  }

  public bool isTranslated() {
    bool ret = AriaCSPINVOKE.ArConfigArg_isTranslated(swigCPtr);
    return ret;
  }

  public void setTranslated(bool b) {
    AriaCSPINVOKE.ArConfigArg_setTranslated(swigCPtr, b);
  }

  public bool parseResource(ArArgumentBuilder arg, string errorBuffer, uint errorBufferLen, string logPrefix, bool isQuiet) {
    bool ret = AriaCSPINVOKE.ArConfigArg_parseResource__SWIG_0(swigCPtr, ArArgumentBuilder.getCPtr(arg), errorBuffer, errorBufferLen, logPrefix, isQuiet);
    return ret;
  }

  public bool parseResource(ArArgumentBuilder arg, string errorBuffer, uint errorBufferLen, string logPrefix) {
    bool ret = AriaCSPINVOKE.ArConfigArg_parseResource__SWIG_1(swigCPtr, ArArgumentBuilder.getCPtr(arg), errorBuffer, errorBufferLen, logPrefix);
    return ret;
  }

  public bool parseResource(ArArgumentBuilder arg, string errorBuffer, uint errorBufferLen) {
    bool ret = AriaCSPINVOKE.ArConfigArg_parseResource__SWIG_2(swigCPtr, ArArgumentBuilder.getCPtr(arg), errorBuffer, errorBufferLen);
    return ret;
  }

  public static bool parseResourceArgText(string argText, string bufOut, uint bufLen) {
    bool ret = AriaCSPINVOKE.ArConfigArg_parseResourceArgText(argText, bufOut, bufLen);
    return ret;
  }

  public bool writeResource(SWIGTYPE_p_FILE file, string lineBuf, int lineBufSize, char separatorChar, string sectionName, string logPrefix) {
    bool ret = AriaCSPINVOKE.ArConfigArg_writeResource__SWIG_0(swigCPtr, SWIGTYPE_p_FILE.getCPtr(file), lineBuf, lineBufSize, separatorChar, sectionName, logPrefix);
    return ret;
  }

  public bool writeResource(SWIGTYPE_p_FILE file, string lineBuf, int lineBufSize, char separatorChar, string sectionName) {
    bool ret = AriaCSPINVOKE.ArConfigArg_writeResource__SWIG_1(swigCPtr, SWIGTYPE_p_FILE.getCPtr(file), lineBuf, lineBufSize, separatorChar, sectionName);
    return ret;
  }

  public static int writeResourceHeader(SWIGTYPE_p_FILE file, string lineBuf, int lineBufSize, char separatorChar, string sectionTitle, string logPrefix) {
    int ret = AriaCSPINVOKE.ArConfigArg_writeResourceHeader__SWIG_0(SWIGTYPE_p_FILE.getCPtr(file), lineBuf, lineBufSize, separatorChar, sectionTitle, logPrefix);
    return ret;
  }

  public static int writeResourceHeader(SWIGTYPE_p_FILE file, string lineBuf, int lineBufSize, char separatorChar, string sectionTitle) {
    int ret = AriaCSPINVOKE.ArConfigArg_writeResourceHeader__SWIG_1(SWIGTYPE_p_FILE.getCPtr(file), lineBuf, lineBufSize, separatorChar, sectionTitle);
    return ret;
  }

  public static int writeResourceSectionHeader(SWIGTYPE_p_FILE file, string lineBuf, int lineBufSize, char separatorChar, string sectionName, string sectionDesc, string sectionExtra, string sectionDisplayName, bool isTranslated, string logPrefix) {
    int ret = AriaCSPINVOKE.ArConfigArg_writeResourceSectionHeader__SWIG_0(SWIGTYPE_p_FILE.getCPtr(file), lineBuf, lineBufSize, separatorChar, sectionName, sectionDesc, sectionExtra, sectionDisplayName, isTranslated, logPrefix);
    return ret;
  }

  public static int writeResourceSectionHeader(SWIGTYPE_p_FILE file, string lineBuf, int lineBufSize, char separatorChar, string sectionName, string sectionDesc, string sectionExtra, string sectionDisplayName, bool isTranslated) {
    int ret = AriaCSPINVOKE.ArConfigArg_writeResourceSectionHeader__SWIG_1(SWIGTYPE_p_FILE.getCPtr(file), lineBuf, lineBufSize, separatorChar, sectionName, sectionDesc, sectionExtra, sectionDisplayName, isTranslated);
    return ret;
  }

  public enum Type {
    INVALID,
    INT,
    DOUBLE,
    STRING,
    BOOL,
    FUNCTOR,
    DESCRIPTION_HOLDER,
    STRING_HOLDER,
    SEPARATOR,
    CPPSTRING,
    LIST,
    LIST_HOLDER,
    LAST_TYPE = LIST_HOLDER
  }

  public enum RestartLevel {
    NO_RESTART,
    RESTART_CLIENT,
    RESTART_IO,
    RESTART_SOFTWARE,
    RESTART_HARDWARE,
    LAST_RESTART_LEVEL = RESTART_HARDWARE
  }

  public static readonly int DEFAULT_DOUBLE_PRECISION = AriaCSPINVOKE.ArConfigArg_DEFAULT_DOUBLE_PRECISION_get();
  public static readonly int TYPE_COUNT = AriaCSPINVOKE.ArConfigArg_TYPE_COUNT_get();
  public static readonly int RESTART_LEVEL_COUNT = AriaCSPINVOKE.ArConfigArg_RESTART_LEVEL_COUNT_get();

  public enum SocketIndices {
    SOCKET_INDEX_OF_SECTION_NAME = 0,
    SOCKET_INDEX_OF_ARG_NAME = 1,
    SOCKET_INDEX_OF_DESCRIPTION = 2,
    SOCKET_INDEX_OF_PRIORITY = 3,
    SOCKET_INDEX_OF_TYPE = 4,
    SOCKET_INDEX_OF_VALUE = 5,
    SOCKET_INDEX_OF_MIN_VALUE = 6,
    SOCKET_INDEX_OF_MAX_VALUE = 7,
    SOCKET_INDEX_OF_DISPLAY = 8,
    SOCKET_INDEX_OF_PARENT_PATH = 9,
    SOCKET_INDEX_OF_SERIALIZABLE = 10
  }

  public enum ResourceIndices {
    RESOURCE_INDEX_OF_SECTION_NAME = 0,
    RESOURCE_INDEX_OF_ARG_NAME = 1,
    RESOURCE_INDEX_OF_TYPE = 2,
    RESOURCE_INDEX_OF_PRIORITY = 3,
    RESOURCE_INDEX_OF_RESTART_LEVEL = 4,
    RESOURCE_INDEX_OF_PARENT_PATH = 5,
    RESOURCE_INDEX_OF_DESCRIPTION = 6,
    RESOURCE_INDEX_OF_EXTRA = 7,
    RESOURCE_INDEX_OF_DISPLAY = 8,
    RESOURCE_INDEX_OF_NEW = 9
  }

  public static readonly int MAX_RESOURCE_ARG_TEXT_LENGTH = AriaCSPINVOKE.ArConfigArg_MAX_RESOURCE_ARG_TEXT_LENGTH_get();

}

}
