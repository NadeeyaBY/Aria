//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.8
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace AriaCS {

public class ArTCMCompassRobot : ArTCM2 {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  public ArTCMCompassRobot(global::System.IntPtr cPtr, bool cMemoryOwn) : base(AriaCSPINVOKE.ArTCMCompassRobot_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  public static global::System.Runtime.InteropServices.HandleRef getCPtr(ArTCMCompassRobot obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~ArTCMCompassRobot() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          AriaCSPINVOKE.delete_ArTCMCompassRobot(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public ArTCMCompassRobot(ArRobot robot) : this(AriaCSPINVOKE.new_ArTCMCompassRobot(ArRobot.getCPtr(robot)), true) {
  }

  public override void commandOff() {
    AriaCSPINVOKE.ArTCMCompassRobot_commandOff(swigCPtr);
  }

  public override void commandJustCompass() {
    AriaCSPINVOKE.ArTCMCompassRobot_commandJustCompass(swigCPtr);
  }

  public override void commandOnePacket() {
    AriaCSPINVOKE.ArTCMCompassRobot_commandOnePacket(swigCPtr);
  }

  public override void commandContinuousPackets() {
    AriaCSPINVOKE.ArTCMCompassRobot_commandContinuousPackets(swigCPtr);
  }

  public override void commandUserCalibration() {
    AriaCSPINVOKE.ArTCMCompassRobot_commandUserCalibration(swigCPtr);
  }

  public override void commandAutoCalibration() {
    AriaCSPINVOKE.ArTCMCompassRobot_commandAutoCalibration(swigCPtr);
  }

  public override void commandStopCalibration() {
    AriaCSPINVOKE.ArTCMCompassRobot_commandStopCalibration(swigCPtr);
  }

  public override void commandSoftReset() {
    AriaCSPINVOKE.ArTCMCompassRobot_commandSoftReset(swigCPtr);
  }

}

}
