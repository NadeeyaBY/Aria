//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.8
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace AriaCS {

public class ArAMPTUCommands : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  public ArAMPTUCommands(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  public static global::System.Runtime.InteropServices.HandleRef getCPtr(ArAMPTUCommands obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~ArAMPTUCommands() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          AriaCSPINVOKE.delete_ArAMPTUCommands(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public ArAMPTUCommands() : this(AriaCSPINVOKE.new_ArAMPTUCommands(), true) {
  }

  public static readonly int ABSTILT = AriaCSPINVOKE.ArAMPTUCommands_ABSTILT_get();
  public static readonly int RELTILTU = AriaCSPINVOKE.ArAMPTUCommands_RELTILTU_get();
  public static readonly int RELTILTD = AriaCSPINVOKE.ArAMPTUCommands_RELTILTD_get();
  public static readonly int ABSPAN = AriaCSPINVOKE.ArAMPTUCommands_ABSPAN_get();
  public static readonly int RELPANCW = AriaCSPINVOKE.ArAMPTUCommands_RELPANCW_get();
  public static readonly int RELPANCCW = AriaCSPINVOKE.ArAMPTUCommands_RELPANCCW_get();
  public static readonly int PANTILT = AriaCSPINVOKE.ArAMPTUCommands_PANTILT_get();
  public static readonly int PANTILTUCW = AriaCSPINVOKE.ArAMPTUCommands_PANTILTUCW_get();
  public static readonly int PANTILTDCW = AriaCSPINVOKE.ArAMPTUCommands_PANTILTDCW_get();
  public static readonly int PANTILTUCCW = AriaCSPINVOKE.ArAMPTUCommands_PANTILTUCCW_get();
  public static readonly int PANTILTDCCW = AriaCSPINVOKE.ArAMPTUCommands_PANTILTDCCW_get();
  public static readonly int ZOOM = AriaCSPINVOKE.ArAMPTUCommands_ZOOM_get();
  public static readonly int PAUSE = AriaCSPINVOKE.ArAMPTUCommands_PAUSE_get();
  public static readonly int CONT = AriaCSPINVOKE.ArAMPTUCommands_CONT_get();
  public static readonly int PURGE = AriaCSPINVOKE.ArAMPTUCommands_PURGE_get();
  public static readonly int STATUS = AriaCSPINVOKE.ArAMPTUCommands_STATUS_get();
  public static readonly int INIT = AriaCSPINVOKE.ArAMPTUCommands_INIT_get();
  public static readonly int RESP = AriaCSPINVOKE.ArAMPTUCommands_RESP_get();
  public static readonly int PANSLEW = AriaCSPINVOKE.ArAMPTUCommands_PANSLEW_get();
  public static readonly int TILTSLEW = AriaCSPINVOKE.ArAMPTUCommands_TILTSLEW_get();

}

}
