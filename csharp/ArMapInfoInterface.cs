//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.8
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace AriaCS {

public class ArMapInfoInterface : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  public ArMapInfoInterface(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  public static global::System.Runtime.InteropServices.HandleRef getCPtr(ArMapInfoInterface obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~ArMapInfoInterface() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          AriaCSPINVOKE.delete_ArMapInfoInterface(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public static string MAP_INFO_NAME {
    set {
      AriaCSPINVOKE.ArMapInfoInterface_MAP_INFO_NAME_set(value);
    } 
    get {
      string ret = AriaCSPINVOKE.ArMapInfoInterface_MAP_INFO_NAME_get();
      return ret;
    } 
  }

  public static string MACRO_INFO_NAME {
    set {
      AriaCSPINVOKE.ArMapInfoInterface_MACRO_INFO_NAME_set(value);
    } 
    get {
      string ret = AriaCSPINVOKE.ArMapInfoInterface_MACRO_INFO_NAME_get();
      return ret;
    } 
  }

  public static string META_INFO_NAME {
    set {
      AriaCSPINVOKE.ArMapInfoInterface_META_INFO_NAME_set(value);
    } 
    get {
      string ret = AriaCSPINVOKE.ArMapInfoInterface_META_INFO_NAME_get();
      return ret;
    } 
  }

  public static string TASK_INFO_NAME {
    set {
      AriaCSPINVOKE.ArMapInfoInterface_TASK_INFO_NAME_set(value);
    } 
    get {
      string ret = AriaCSPINVOKE.ArMapInfoInterface_TASK_INFO_NAME_get();
      return ret;
    } 
  }

  public static string ROUTE_INFO_NAME {
    set {
      AriaCSPINVOKE.ArMapInfoInterface_ROUTE_INFO_NAME_set(value);
    } 
    get {
      string ret = AriaCSPINVOKE.ArMapInfoInterface_ROUTE_INFO_NAME_get();
      return ret;
    } 
  }

  public static string SCHED_TASK_INFO_NAME {
    set {
      AriaCSPINVOKE.ArMapInfoInterface_SCHED_TASK_INFO_NAME_set(value);
    } 
    get {
      string ret = AriaCSPINVOKE.ArMapInfoInterface_SCHED_TASK_INFO_NAME_get();
      return ret;
    } 
  }

  public static string SCHED_INFO_NAME {
    set {
      AriaCSPINVOKE.ArMapInfoInterface_SCHED_INFO_NAME_set(value);
    } 
    get {
      string ret = AriaCSPINVOKE.ArMapInfoInterface_SCHED_INFO_NAME_get();
      return ret;
    } 
  }

  public static string CAIRN_INFO_NAME {
    set {
      AriaCSPINVOKE.ArMapInfoInterface_CAIRN_INFO_NAME_set(value);
    } 
    get {
      string ret = AriaCSPINVOKE.ArMapInfoInterface_CAIRN_INFO_NAME_get();
      return ret;
    } 
  }

  public static string CUSTOM_INFO_NAME {
    set {
      AriaCSPINVOKE.ArMapInfoInterface_CUSTOM_INFO_NAME_set(value);
    } 
    get {
      string ret = AriaCSPINVOKE.ArMapInfoInterface_CUSTOM_INFO_NAME_get();
      return ret;
    } 
  }

  public virtual int getInfoCount() {
    int ret = AriaCSPINVOKE.ArMapInfoInterface_getInfoCount(swigCPtr);
    return ret;
  }

  public virtual SWIGTYPE_p_std__listT_std__string_t getInfoNames() {
    SWIGTYPE_p_std__listT_std__string_t ret = new SWIGTYPE_p_std__listT_std__string_t(AriaCSPINVOKE.ArMapInfoInterface_getInfoNames(swigCPtr), true);
    return ret;
  }

  public virtual SWIGTYPE_p_std__listT_ArArgumentBuilder_p_t getInfo(string infoName) {
    global::System.IntPtr cPtr = AriaCSPINVOKE.ArMapInfoInterface_getInfo__SWIG_0(swigCPtr, infoName);
    SWIGTYPE_p_std__listT_ArArgumentBuilder_p_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_std__listT_ArArgumentBuilder_p_t(cPtr, false);
    return ret;
  }

  public virtual SWIGTYPE_p_std__listT_ArArgumentBuilder_p_t getInfo(int infoType) {
    global::System.IntPtr cPtr = AriaCSPINVOKE.ArMapInfoInterface_getInfo__SWIG_1(swigCPtr, infoType);
    SWIGTYPE_p_std__listT_ArArgumentBuilder_p_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_std__listT_ArArgumentBuilder_p_t(cPtr, false);
    return ret;
  }

  public virtual SWIGTYPE_p_std__listT_ArArgumentBuilder_p_t getMapInfo() {
    global::System.IntPtr cPtr = AriaCSPINVOKE.ArMapInfoInterface_getMapInfo(swigCPtr);
    SWIGTYPE_p_std__listT_ArArgumentBuilder_p_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_std__listT_ArArgumentBuilder_p_t(cPtr, false);
    return ret;
  }

  public virtual bool setInfo(string infoName, SWIGTYPE_p_std__listT_ArArgumentBuilder_p_t infoList, SWIGTYPE_p_ArMapChangeDetails changeDetails) {
    bool ret = AriaCSPINVOKE.ArMapInfoInterface_setInfo__SWIG_0(swigCPtr, infoName, SWIGTYPE_p_std__listT_ArArgumentBuilder_p_t.getCPtr(infoList), SWIGTYPE_p_ArMapChangeDetails.getCPtr(changeDetails));
    return ret;
  }

  public virtual bool setInfo(string infoName, SWIGTYPE_p_std__listT_ArArgumentBuilder_p_t infoList) {
    bool ret = AriaCSPINVOKE.ArMapInfoInterface_setInfo__SWIG_1(swigCPtr, infoName, SWIGTYPE_p_std__listT_ArArgumentBuilder_p_t.getCPtr(infoList));
    return ret;
  }

  public virtual bool setInfo(int infoType, SWIGTYPE_p_std__listT_ArArgumentBuilder_p_t infoList, SWIGTYPE_p_ArMapChangeDetails changeDetails) {
    bool ret = AriaCSPINVOKE.ArMapInfoInterface_setInfo__SWIG_2(swigCPtr, infoType, SWIGTYPE_p_std__listT_ArArgumentBuilder_p_t.getCPtr(infoList), SWIGTYPE_p_ArMapChangeDetails.getCPtr(changeDetails));
    return ret;
  }

  public virtual bool setInfo(int infoType, SWIGTYPE_p_std__listT_ArArgumentBuilder_p_t infoList) {
    bool ret = AriaCSPINVOKE.ArMapInfoInterface_setInfo__SWIG_3(swigCPtr, infoType, SWIGTYPE_p_std__listT_ArArgumentBuilder_p_t.getCPtr(infoList));
    return ret;
  }

  public virtual bool setMapInfo(SWIGTYPE_p_std__listT_ArArgumentBuilder_p_t mapInfo, SWIGTYPE_p_ArMapChangeDetails changeDetails) {
    bool ret = AriaCSPINVOKE.ArMapInfoInterface_setMapInfo__SWIG_0(swigCPtr, SWIGTYPE_p_std__listT_ArArgumentBuilder_p_t.getCPtr(mapInfo), SWIGTYPE_p_ArMapChangeDetails.getCPtr(changeDetails));
    return ret;
  }

  public virtual bool setMapInfo(SWIGTYPE_p_std__listT_ArArgumentBuilder_p_t mapInfo) {
    bool ret = AriaCSPINVOKE.ArMapInfoInterface_setMapInfo__SWIG_1(swigCPtr, SWIGTYPE_p_std__listT_ArArgumentBuilder_p_t.getCPtr(mapInfo));
    return ret;
  }

  public virtual void writeInfoToFunctor(ArFunctor1_CString functor, string endOfLineChars) {
    AriaCSPINVOKE.ArMapInfoInterface_writeInfoToFunctor(swigCPtr, ArFunctor1_CString.getCPtr(functor), endOfLineChars);
  }

  public virtual string getInfoName(int infoType) {
    string ret = AriaCSPINVOKE.ArMapInfoInterface_getInfoName(swigCPtr, infoType);
    return ret;
  }

  public enum InfoType {
    MAP_INFO,
    FIRST_INFO = MAP_INFO,
    MACRO_INFO,
    META_INFO,
    TASK_INFO,
    ROUTE_INFO,
    SCHED_TASK_INFO,
    SCHED_INFO,
    CAIRN_INFO,
    CUSTOM_INFO,
    LAST_INFO = CUSTOM_INFO
  }

  public static readonly int INFO_COUNT = AriaCSPINVOKE.ArMapInfoInterface_INFO_COUNT_get();

}

}
