//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.8
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace AriaCS {

public class ArActionGroupColorFollow : ArActionGroup {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  public ArActionGroupColorFollow(global::System.IntPtr cPtr, bool cMemoryOwn) : base(AriaCSPINVOKE.ArActionGroupColorFollow_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  public static global::System.Runtime.InteropServices.HandleRef getCPtr(ArActionGroupColorFollow obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~ArActionGroupColorFollow() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          AriaCSPINVOKE.delete_ArActionGroupColorFollow(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public ArActionGroupColorFollow(ArRobot robot, ArACTS_1_2 acts, ArPTZ camera) : this(AriaCSPINVOKE.new_ArActionGroupColorFollow(ArRobot.getCPtr(robot), ArACTS_1_2.getCPtr(acts), ArPTZ.getCPtr(camera)), true) {
  }

  public void setCamera(ArPTZ camera) {
    AriaCSPINVOKE.ArActionGroupColorFollow_setCamera(swigCPtr, ArPTZ.getCPtr(camera));
  }

  public void setChannel(int channel) {
    AriaCSPINVOKE.ArActionGroupColorFollow_setChannel(swigCPtr, channel);
  }

  public void startMovement() {
    AriaCSPINVOKE.ArActionGroupColorFollow_startMovement(swigCPtr);
  }

  public void stopMovement() {
    AriaCSPINVOKE.ArActionGroupColorFollow_stopMovement(swigCPtr);
  }

  public void setAcquire(bool acquire) {
    AriaCSPINVOKE.ArActionGroupColorFollow_setAcquire(swigCPtr, acquire);
  }

  public int getChannel() {
    int ret = AriaCSPINVOKE.ArActionGroupColorFollow_getChannel(swigCPtr);
    return ret;
  }

  public bool getAcquire() {
    bool ret = AriaCSPINVOKE.ArActionGroupColorFollow_getAcquire(swigCPtr);
    return ret;
  }

  public bool getMovement() {
    bool ret = AriaCSPINVOKE.ArActionGroupColorFollow_getMovement(swigCPtr);
    return ret;
  }

  public bool getBlob() {
    bool ret = AriaCSPINVOKE.ArActionGroupColorFollow_getBlob(swigCPtr);
    return ret;
  }

}

}
