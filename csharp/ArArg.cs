//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.8
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace AriaCS {

public class ArArg : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  public ArArg(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  public static global::System.Runtime.InteropServices.HandleRef getCPtr(ArArg obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~ArArg() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          AriaCSPINVOKE.delete_ArArg(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public ArArg() : this(AriaCSPINVOKE.new_ArArg__SWIG_0(), true) {
  }

  public ArArg(string name, SWIGTYPE_p_int pointer, string description, int minInt, int maxInt) : this(AriaCSPINVOKE.new_ArArg__SWIG_1(name, SWIGTYPE_p_int.getCPtr(pointer), description, minInt, maxInt), true) {
  }

  public ArArg(string name, SWIGTYPE_p_int pointer, string description, int minInt) : this(AriaCSPINVOKE.new_ArArg__SWIG_2(name, SWIGTYPE_p_int.getCPtr(pointer), description, minInt), true) {
  }

  public ArArg(string name, SWIGTYPE_p_int pointer, string description) : this(AriaCSPINVOKE.new_ArArg__SWIG_3(name, SWIGTYPE_p_int.getCPtr(pointer), description), true) {
  }

  public ArArg(string name, SWIGTYPE_p_int pointer) : this(AriaCSPINVOKE.new_ArArg__SWIG_4(name, SWIGTYPE_p_int.getCPtr(pointer)), true) {
  }

  public ArArg(string name, SWIGTYPE_p_double pointer, string description, double minDouble, double maxDouble) : this(AriaCSPINVOKE.new_ArArg__SWIG_5(name, SWIGTYPE_p_double.getCPtr(pointer), description, minDouble, maxDouble), true) {
  }

  public ArArg(string name, SWIGTYPE_p_double pointer, string description, double minDouble) : this(AriaCSPINVOKE.new_ArArg__SWIG_6(name, SWIGTYPE_p_double.getCPtr(pointer), description, minDouble), true) {
  }

  public ArArg(string name, SWIGTYPE_p_double pointer, string description) : this(AriaCSPINVOKE.new_ArArg__SWIG_7(name, SWIGTYPE_p_double.getCPtr(pointer), description), true) {
  }

  public ArArg(string name, SWIGTYPE_p_double pointer) : this(AriaCSPINVOKE.new_ArArg__SWIG_8(name, SWIGTYPE_p_double.getCPtr(pointer)), true) {
  }

  public ArArg(string name, SWIGTYPE_p_bool pointer, string description) : this(AriaCSPINVOKE.new_ArArg__SWIG_9(name, SWIGTYPE_p_bool.getCPtr(pointer), description), true) {
  }

  public ArArg(string name, SWIGTYPE_p_bool pointer) : this(AriaCSPINVOKE.new_ArArg__SWIG_10(name, SWIGTYPE_p_bool.getCPtr(pointer)), true) {
  }

  public ArArg(string name, ArPose pointer, string description) : this(AriaCSPINVOKE.new_ArArg__SWIG_11(name, ArPose.getCPtr(pointer), description), true) {
  }

  public ArArg(string name, ArPose pointer) : this(AriaCSPINVOKE.new_ArArg__SWIG_12(name, ArPose.getCPtr(pointer)), true) {
  }

  public ArArg(string name, string pointer, string description, uint maxStrLen) : this(AriaCSPINVOKE.new_ArArg__SWIG_13(name, pointer, description, maxStrLen), true) {
  }

  public ArArg(string name, ArRetFunctor1_Bool_ArgumentBuilderP setFunctor, SWIGTYPE_p_ArRetFunctorT_std__listT_ArArgumentBuilder_p_t_const_p_t getFunctor, string description) : this(AriaCSPINVOKE.new_ArArg__SWIG_14(name, ArRetFunctor1_Bool_ArgumentBuilderP.getCPtr(setFunctor), SWIGTYPE_p_ArRetFunctorT_std__listT_ArArgumentBuilder_p_t_const_p_t.getCPtr(getFunctor), description), true) {
  }

  public ArArg(string description) : this(AriaCSPINVOKE.new_ArArg__SWIG_15(description), true) {
  }

  public ArArg(ArArg arg) : this(AriaCSPINVOKE.new_ArArg__SWIG_16(ArArg.getCPtr(arg)), true) {
    if (AriaCSPINVOKE.SWIGPendingException.Pending) throw AriaCSPINVOKE.SWIGPendingException.Retrieve();
  }

  public ArArg.Type getType() {
    ArArg.Type ret = (ArArg.Type)AriaCSPINVOKE.ArArg_getType(swigCPtr);
    return ret;
  }

  public string getName() {
    string ret = AriaCSPINVOKE.ArArg_getName(swigCPtr);
    return ret;
  }

  public string getDescription() {
    string ret = AriaCSPINVOKE.ArArg_getDescription(swigCPtr);
    return ret;
  }

  public bool setInt(int val) {
    bool ret = AriaCSPINVOKE.ArArg_setInt(swigCPtr, val);
    return ret;
  }

  public bool setDouble(double val) {
    bool ret = AriaCSPINVOKE.ArArg_setDouble(swigCPtr, val);
    return ret;
  }

  public bool setBool(bool val) {
    bool ret = AriaCSPINVOKE.ArArg_setBool(swigCPtr, val);
    return ret;
  }

  public bool setPose(ArPose pose) {
    bool ret = AriaCSPINVOKE.ArArg_setPose(swigCPtr, ArPose.getCPtr(pose));
    if (AriaCSPINVOKE.SWIGPendingException.Pending) throw AriaCSPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool setString(string str) {
    bool ret = AriaCSPINVOKE.ArArg_setString(swigCPtr, str);
    return ret;
  }

  public bool setArgWithFunctor(ArArgumentBuilder argument) {
    bool ret = AriaCSPINVOKE.ArArg_setArgWithFunctor(swigCPtr, ArArgumentBuilder.getCPtr(argument));
    return ret;
  }

  public int getInt() {
    int ret = AriaCSPINVOKE.ArArg_getInt(swigCPtr);
    return ret;
  }

  public double getDouble() {
    double ret = AriaCSPINVOKE.ArArg_getDouble(swigCPtr);
    return ret;
  }

  public bool getBool() {
    bool ret = AriaCSPINVOKE.ArArg_getBool(swigCPtr);
    return ret;
  }

  public ArPose getPose() {
    ArPose ret = new ArPose(AriaCSPINVOKE.ArArg_getPose(swigCPtr), true);
    return ret;
  }

  public string getString() {
    string ret = AriaCSPINVOKE.ArArg_getString(swigCPtr);
    return ret;
  }

  public SWIGTYPE_p_std__listT_ArArgumentBuilder_p_t getArgsWithFunctor() {
    global::System.IntPtr cPtr = AriaCSPINVOKE.ArArg_getArgsWithFunctor(swigCPtr);
    SWIGTYPE_p_std__listT_ArArgumentBuilder_p_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_std__listT_ArArgumentBuilder_p_t(cPtr, false);
    return ret;
  }

  public void log() {
    AriaCSPINVOKE.ArArg_log(swigCPtr);
  }

  public int getMinInt() {
    int ret = AriaCSPINVOKE.ArArg_getMinInt(swigCPtr);
    return ret;
  }

  public int getMaxInt() {
    int ret = AriaCSPINVOKE.ArArg_getMaxInt(swigCPtr);
    return ret;
  }

  public double getMinDouble() {
    double ret = AriaCSPINVOKE.ArArg_getMinDouble(swigCPtr);
    return ret;
  }

  public double getMaxDouble() {
    double ret = AriaCSPINVOKE.ArArg_getMaxDouble(swigCPtr);
    return ret;
  }

  public bool getConfigPrioritySet() {
    bool ret = AriaCSPINVOKE.ArArg_getConfigPrioritySet(swigCPtr);
    return ret;
  }

  public ArPriority.Priority getConfigPriority() {
    ArPriority.Priority ret = (ArPriority.Priority)AriaCSPINVOKE.ArArg_getConfigPriority(swigCPtr);
    return ret;
  }

  public void setConfigPriority(ArPriority.Priority priority) {
    AriaCSPINVOKE.ArArg_setConfigPriority(swigCPtr, (int)priority);
  }

  public enum Type {
    INVALID,
    INT,
    DOUBLE,
    STRING,
    BOOL,
    POSE,
    FUNCTOR,
    DESCRIPTION_HOLDER,
    LAST_TYPE = DESCRIPTION_HOLDER
  }

  public static readonly int TYPE_COUNT = AriaCSPINVOKE.ArArg_TYPE_COUNT_get();

}

}
