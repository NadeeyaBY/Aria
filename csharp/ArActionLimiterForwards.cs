//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.8
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace AriaCS {

public class ArActionLimiterForwards : ArAction {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  public ArActionLimiterForwards(global::System.IntPtr cPtr, bool cMemoryOwn) : base(AriaCSPINVOKE.ArActionLimiterForwards_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  public static global::System.Runtime.InteropServices.HandleRef getCPtr(ArActionLimiterForwards obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~ArActionLimiterForwards() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          AriaCSPINVOKE.delete_ArActionLimiterForwards(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public ArActionLimiterForwards(string name, double stopDistance, double slowDistance, double slowSpeed, double widthRatio) : this(AriaCSPINVOKE.new_ArActionLimiterForwards__SWIG_0(name, stopDistance, slowDistance, slowSpeed, widthRatio), true) {
  }

  public ArActionLimiterForwards(string name, double stopDistance, double slowDistance, double slowSpeed) : this(AriaCSPINVOKE.new_ArActionLimiterForwards__SWIG_1(name, stopDistance, slowDistance, slowSpeed), true) {
  }

  public ArActionLimiterForwards(string name, double stopDistance, double slowDistance) : this(AriaCSPINVOKE.new_ArActionLimiterForwards__SWIG_2(name, stopDistance, slowDistance), true) {
  }

  public ArActionLimiterForwards(string name, double stopDistance) : this(AriaCSPINVOKE.new_ArActionLimiterForwards__SWIG_3(name, stopDistance), true) {
  }

  public ArActionLimiterForwards(string name) : this(AriaCSPINVOKE.new_ArActionLimiterForwards__SWIG_4(name), true) {
  }

  public ArActionLimiterForwards() : this(AriaCSPINVOKE.new_ArActionLimiterForwards__SWIG_5(), true) {
  }

  public override ArActionDesired fire(ArActionDesired currentDesired) {
    global::System.IntPtr cPtr = AriaCSPINVOKE.ArActionLimiterForwards_fire(swigCPtr, ArActionDesired.getCPtr(currentDesired));
    ArActionDesired ret = (cPtr == global::System.IntPtr.Zero) ? null : new ArActionDesired(cPtr, false);
    if (AriaCSPINVOKE.SWIGPendingException.Pending) throw AriaCSPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public override ArActionDesired getDesired() {
    global::System.IntPtr cPtr = AriaCSPINVOKE.ArActionLimiterForwards_getDesired(swigCPtr);
    ArActionDesired ret = (cPtr == global::System.IntPtr.Zero) ? null : new ArActionDesired(cPtr, false);
    return ret;
  }

  public void setParameters(double stopDistance, double slowDistance, double slowSpeed, double widthRatio) {
    AriaCSPINVOKE.ArActionLimiterForwards_setParameters__SWIG_0(swigCPtr, stopDistance, slowDistance, slowSpeed, widthRatio);
  }

  public void setParameters(double stopDistance, double slowDistance, double slowSpeed) {
    AriaCSPINVOKE.ArActionLimiterForwards_setParameters__SWIG_1(swigCPtr, stopDistance, slowDistance, slowSpeed);
  }

  public void setParameters(double stopDistance, double slowDistance) {
    AriaCSPINVOKE.ArActionLimiterForwards_setParameters__SWIG_2(swigCPtr, stopDistance, slowDistance);
  }

  public void setParameters(double stopDistance) {
    AriaCSPINVOKE.ArActionLimiterForwards_setParameters__SWIG_3(swigCPtr, stopDistance);
  }

  public void setParameters() {
    AriaCSPINVOKE.ArActionLimiterForwards_setParameters__SWIG_4(swigCPtr);
  }

  public bool getStopped() {
    bool ret = AriaCSPINVOKE.ArActionLimiterForwards_getStopped(swigCPtr);
    return ret;
  }

  public ArPose getLastSensorReadingPos() {
    ArPose ret = new ArPose(AriaCSPINVOKE.ArActionLimiterForwards_getLastSensorReadingPos(swigCPtr), true);
    return ret;
  }

  public ArRangeDevice getLastSensorReadingDevice() {
    global::System.IntPtr cPtr = AriaCSPINVOKE.ArActionLimiterForwards_getLastSensorReadingDevice(swigCPtr);
    ArRangeDevice ret = (cPtr == global::System.IntPtr.Zero) ? null : new ArRangeDevice(cPtr, false);
    return ret;
  }

}

}
