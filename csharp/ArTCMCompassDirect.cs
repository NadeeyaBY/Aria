//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.8
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace AriaCS {

public class ArTCMCompassDirect : ArTCM2 {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  public ArTCMCompassDirect(global::System.IntPtr cPtr, bool cMemoryOwn) : base(AriaCSPINVOKE.ArTCMCompassDirect_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  public static global::System.Runtime.InteropServices.HandleRef getCPtr(ArTCMCompassDirect obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~ArTCMCompassDirect() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          AriaCSPINVOKE.delete_ArTCMCompassDirect(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public ArTCMCompassDirect(ArDeviceConnection devCon) : this(AriaCSPINVOKE.new_ArTCMCompassDirect__SWIG_0(ArDeviceConnection.getCPtr(devCon)), true) {
  }

  public ArTCMCompassDirect(string serialPortName) : this(AriaCSPINVOKE.new_ArTCMCompassDirect__SWIG_1(serialPortName), true) {
  }

  public ArTCMCompassDirect() : this(AriaCSPINVOKE.new_ArTCMCompassDirect__SWIG_2(), true) {
  }

  public override bool connect() {
    bool ret = AriaCSPINVOKE.ArTCMCompassDirect_connect(swigCPtr);
    return ret;
  }

  public override bool blockingConnect(uint connectTimeout) {
    bool ret = AriaCSPINVOKE.ArTCMCompassDirect_blockingConnect__SWIG_0(swigCPtr, connectTimeout);
    return ret;
  }

  public override bool blockingConnect() {
    bool ret = AriaCSPINVOKE.ArTCMCompassDirect_blockingConnect__SWIG_1(swigCPtr);
    return ret;
  }

  public override void commandAutoCalibration() {
    AriaCSPINVOKE.ArTCMCompassDirect_commandAutoCalibration(swigCPtr);
  }

  public override void commandUserCalibration() {
    AriaCSPINVOKE.ArTCMCompassDirect_commandUserCalibration(swigCPtr);
  }

  public override void commandStopCalibration() {
    AriaCSPINVOKE.ArTCMCompassDirect_commandStopCalibration(swigCPtr);
  }

  public override void commandContinuousPackets() {
    AriaCSPINVOKE.ArTCMCompassDirect_commandContinuousPackets(swigCPtr);
  }

  public override void commandOnePacket() {
    AriaCSPINVOKE.ArTCMCompassDirect_commandOnePacket(swigCPtr);
  }

  public override void commandOff() {
    AriaCSPINVOKE.ArTCMCompassDirect_commandOff(swigCPtr);
  }

  public override void commandSoftReset() {
    AriaCSPINVOKE.ArTCMCompassDirect_commandSoftReset(swigCPtr);
  }

  public override void commandJustCompass() {
    AriaCSPINVOKE.ArTCMCompassDirect_commandJustCompass(swigCPtr);
  }

  public int read(uint msWait) {
    int ret = AriaCSPINVOKE.ArTCMCompassDirect_read__SWIG_0(swigCPtr, msWait);
    return ret;
  }

  public int read() {
    int ret = AriaCSPINVOKE.ArTCMCompassDirect_read__SWIG_1(swigCPtr);
    return ret;
  }

  public void setDeviceConnection(ArDeviceConnection devCon) {
    AriaCSPINVOKE.ArTCMCompassDirect_setDeviceConnection(swigCPtr, ArDeviceConnection.getCPtr(devCon));
  }

  public ArDeviceConnection getDeviceConnetion() {
    global::System.IntPtr cPtr = AriaCSPINVOKE.ArTCMCompassDirect_getDeviceConnetion(swigCPtr);
    ArDeviceConnection ret = (cPtr == global::System.IntPtr.Zero) ? null : new ArDeviceConnection(cPtr, false);
    return ret;
  }

}

}
