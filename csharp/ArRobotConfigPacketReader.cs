//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.8
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace AriaCS {

public class ArRobotConfigPacketReader : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  public ArRobotConfigPacketReader(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  public static global::System.Runtime.InteropServices.HandleRef getCPtr(ArRobotConfigPacketReader obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~ArRobotConfigPacketReader() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          AriaCSPINVOKE.delete_ArRobotConfigPacketReader(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public ArRobotConfigPacketReader(ArRobot robot, bool onlyOneRequest, ArFunctor packetedArrivedCB) : this(AriaCSPINVOKE.new_ArRobotConfigPacketReader__SWIG_0(ArRobot.getCPtr(robot), onlyOneRequest, ArFunctor.getCPtr(packetedArrivedCB)), true) {
  }

  public ArRobotConfigPacketReader(ArRobot robot, bool onlyOneRequest) : this(AriaCSPINVOKE.new_ArRobotConfigPacketReader__SWIG_1(ArRobot.getCPtr(robot), onlyOneRequest), true) {
  }

  public ArRobotConfigPacketReader(ArRobot robot) : this(AriaCSPINVOKE.new_ArRobotConfigPacketReader__SWIG_2(ArRobot.getCPtr(robot)), true) {
  }

  public bool requestPacket() {
    bool ret = AriaCSPINVOKE.ArRobotConfigPacketReader_requestPacket(swigCPtr);
    return ret;
  }

  public bool hasPacketBeenRequested() {
    bool ret = AriaCSPINVOKE.ArRobotConfigPacketReader_hasPacketBeenRequested(swigCPtr);
    return ret;
  }

  public bool hasPacketArrived() {
    bool ret = AriaCSPINVOKE.ArRobotConfigPacketReader_hasPacketArrived(swigCPtr);
    return ret;
  }

  public ArRobotPacket getRobotPacket() {
    global::System.IntPtr cPtr = AriaCSPINVOKE.ArRobotConfigPacketReader_getRobotPacket(swigCPtr);
    ArRobotPacket ret = (cPtr == global::System.IntPtr.Zero) ? null : new ArRobotPacket(cPtr, false);
    return ret;
  }

  public void log() {
    AriaCSPINVOKE.ArRobotConfigPacketReader_log(swigCPtr);
  }

  public void logMovement() {
    AriaCSPINVOKE.ArRobotConfigPacketReader_logMovement(swigCPtr);
  }

  public string buildString() {
    string ret = AriaCSPINVOKE.ArRobotConfigPacketReader_buildString(swigCPtr);
    return ret;
  }

  public string buildStringMovement() {
    string ret = AriaCSPINVOKE.ArRobotConfigPacketReader_buildStringMovement(swigCPtr);
    return ret;
  }

  public string getType() {
    string ret = AriaCSPINVOKE.ArRobotConfigPacketReader_getType(swigCPtr);
    return ret;
  }

  public string getSubType() {
    string ret = AriaCSPINVOKE.ArRobotConfigPacketReader_getSubType(swigCPtr);
    return ret;
  }

  public string getSerialNumber() {
    string ret = AriaCSPINVOKE.ArRobotConfigPacketReader_getSerialNumber(swigCPtr);
    return ret;
  }

  public int getRotVelTop() {
    int ret = AriaCSPINVOKE.ArRobotConfigPacketReader_getRotVelTop(swigCPtr);
    return ret;
  }

  public int getTransVelTop() {
    int ret = AriaCSPINVOKE.ArRobotConfigPacketReader_getTransVelTop(swigCPtr);
    return ret;
  }

  public int getRotAccelTop() {
    int ret = AriaCSPINVOKE.ArRobotConfigPacketReader_getRotAccelTop(swigCPtr);
    return ret;
  }

  public int getTransAccelTop() {
    int ret = AriaCSPINVOKE.ArRobotConfigPacketReader_getTransAccelTop(swigCPtr);
    return ret;
  }

  public int getPwmMax() {
    int ret = AriaCSPINVOKE.ArRobotConfigPacketReader_getPwmMax(swigCPtr);
    return ret;
  }

  public string getName() {
    string ret = AriaCSPINVOKE.ArRobotConfigPacketReader_getName(swigCPtr);
    return ret;
  }

  public int getSipCycleTime() {
    int ret = AriaCSPINVOKE.ArRobotConfigPacketReader_getSipCycleTime(swigCPtr);
    return ret;
  }

  public int getHostBaud() {
    int ret = AriaCSPINVOKE.ArRobotConfigPacketReader_getHostBaud(swigCPtr);
    return ret;
  }

  public int getAux1Baud() {
    int ret = AriaCSPINVOKE.ArRobotConfigPacketReader_getAux1Baud(swigCPtr);
    return ret;
  }

  public bool getHasGripper() {
    bool ret = AriaCSPINVOKE.ArRobotConfigPacketReader_getHasGripper(swigCPtr);
    return ret;
  }

  public bool getFrontSonar() {
    bool ret = AriaCSPINVOKE.ArRobotConfigPacketReader_getFrontSonar(swigCPtr);
    return ret;
  }

  public bool getRearSonar() {
    bool ret = AriaCSPINVOKE.ArRobotConfigPacketReader_getRearSonar(swigCPtr);
    return ret;
  }

  public int getLowBattery() {
    int ret = AriaCSPINVOKE.ArRobotConfigPacketReader_getLowBattery(swigCPtr);
    return ret;
  }

  public int getRevCount() {
    int ret = AriaCSPINVOKE.ArRobotConfigPacketReader_getRevCount(swigCPtr);
    return ret;
  }

  public int getWatchdog() {
    int ret = AriaCSPINVOKE.ArRobotConfigPacketReader_getWatchdog(swigCPtr);
    return ret;
  }

  public bool getNormalMPacs() {
    bool ret = AriaCSPINVOKE.ArRobotConfigPacketReader_getNormalMPacs(swigCPtr);
    return ret;
  }

  public int getStallVal() {
    int ret = AriaCSPINVOKE.ArRobotConfigPacketReader_getStallVal(swigCPtr);
    return ret;
  }

  public int getStallCount() {
    int ret = AriaCSPINVOKE.ArRobotConfigPacketReader_getStallCount(swigCPtr);
    return ret;
  }

  public int getJoyVel() {
    int ret = AriaCSPINVOKE.ArRobotConfigPacketReader_getJoyVel(swigCPtr);
    return ret;
  }

  public int getJoyRotVel() {
    int ret = AriaCSPINVOKE.ArRobotConfigPacketReader_getJoyRotVel(swigCPtr);
    return ret;
  }

  public int getRotVelMax() {
    int ret = AriaCSPINVOKE.ArRobotConfigPacketReader_getRotVelMax(swigCPtr);
    return ret;
  }

  public int getTransVelMax() {
    int ret = AriaCSPINVOKE.ArRobotConfigPacketReader_getTransVelMax(swigCPtr);
    return ret;
  }

  public int getRotAccel() {
    int ret = AriaCSPINVOKE.ArRobotConfigPacketReader_getRotAccel(swigCPtr);
    return ret;
  }

  public int getRotDecel() {
    int ret = AriaCSPINVOKE.ArRobotConfigPacketReader_getRotDecel(swigCPtr);
    return ret;
  }

  public int getRotKP() {
    int ret = AriaCSPINVOKE.ArRobotConfigPacketReader_getRotKP(swigCPtr);
    return ret;
  }

  public int getRotKV() {
    int ret = AriaCSPINVOKE.ArRobotConfigPacketReader_getRotKV(swigCPtr);
    return ret;
  }

  public int getRotKI() {
    int ret = AriaCSPINVOKE.ArRobotConfigPacketReader_getRotKI(swigCPtr);
    return ret;
  }

  public int getTransAccel() {
    int ret = AriaCSPINVOKE.ArRobotConfigPacketReader_getTransAccel(swigCPtr);
    return ret;
  }

  public int getTransDecel() {
    int ret = AriaCSPINVOKE.ArRobotConfigPacketReader_getTransDecel(swigCPtr);
    return ret;
  }

  public int getTransKP() {
    int ret = AriaCSPINVOKE.ArRobotConfigPacketReader_getTransKP(swigCPtr);
    return ret;
  }

  public int getTransKV() {
    int ret = AriaCSPINVOKE.ArRobotConfigPacketReader_getTransKV(swigCPtr);
    return ret;
  }

  public int getTransKI() {
    int ret = AriaCSPINVOKE.ArRobotConfigPacketReader_getTransKI(swigCPtr);
    return ret;
  }

  public int getFrontBumps() {
    int ret = AriaCSPINVOKE.ArRobotConfigPacketReader_getFrontBumps(swigCPtr);
    return ret;
  }

  public int getRearBumps() {
    int ret = AriaCSPINVOKE.ArRobotConfigPacketReader_getRearBumps(swigCPtr);
    return ret;
  }

  public int getHasCharger() {
    int ret = AriaCSPINVOKE.ArRobotConfigPacketReader_getHasCharger(swigCPtr);
    return ret;
  }

  public int getSonarCycle() {
    int ret = AriaCSPINVOKE.ArRobotConfigPacketReader_getSonarCycle(swigCPtr);
    return ret;
  }

  public bool getResetBaud() {
    bool ret = AriaCSPINVOKE.ArRobotConfigPacketReader_getResetBaud(swigCPtr);
    return ret;
  }

  public bool getHasGyro() {
    bool ret = AriaCSPINVOKE.ArRobotConfigPacketReader_getHasGyro(swigCPtr);
    return ret;
  }

  public int getGyroType() {
    int ret = AriaCSPINVOKE.ArRobotConfigPacketReader_getGyroType(swigCPtr);
    return ret;
  }

  public int getDriftFactor() {
    int ret = AriaCSPINVOKE.ArRobotConfigPacketReader_getDriftFactor(swigCPtr);
    return ret;
  }

  public int getAux2Baud() {
    int ret = AriaCSPINVOKE.ArRobotConfigPacketReader_getAux2Baud(swigCPtr);
    return ret;
  }

  public int getAux3Baud() {
    int ret = AriaCSPINVOKE.ArRobotConfigPacketReader_getAux3Baud(swigCPtr);
    return ret;
  }

  public int getTicksMM() {
    int ret = AriaCSPINVOKE.ArRobotConfigPacketReader_getTicksMM(swigCPtr);
    return ret;
  }

  public int getShutdownVoltage() {
    int ret = AriaCSPINVOKE.ArRobotConfigPacketReader_getShutdownVoltage(swigCPtr);
    return ret;
  }

  public string getFirmwareVersion() {
    string ret = AriaCSPINVOKE.ArRobotConfigPacketReader_getFirmwareVersion(swigCPtr);
    return ret;
  }

  public int getGyroCW() {
    int ret = AriaCSPINVOKE.ArRobotConfigPacketReader_getGyroCW(swigCPtr);
    return ret;
  }

  public int getGyroCCW() {
    int ret = AriaCSPINVOKE.ArRobotConfigPacketReader_getGyroCCW(swigCPtr);
    return ret;
  }

  public int getKinematicsDelay() {
    int ret = AriaCSPINVOKE.ArRobotConfigPacketReader_getKinematicsDelay(swigCPtr);
    return ret;
  }

  public int getLatVelTop() {
    int ret = AriaCSPINVOKE.ArRobotConfigPacketReader_getLatVelTop(swigCPtr);
    return ret;
  }

  public int getLatAccelTop() {
    int ret = AriaCSPINVOKE.ArRobotConfigPacketReader_getLatAccelTop(swigCPtr);
    return ret;
  }

  public int getLatVelMax() {
    int ret = AriaCSPINVOKE.ArRobotConfigPacketReader_getLatVelMax(swigCPtr);
    return ret;
  }

  public int getLatAccel() {
    int ret = AriaCSPINVOKE.ArRobotConfigPacketReader_getLatAccel(swigCPtr);
    return ret;
  }

  public int getLatDecel() {
    int ret = AriaCSPINVOKE.ArRobotConfigPacketReader_getLatDecel(swigCPtr);
    return ret;
  }

  public int getPowerbotChargeThreshold() {
    int ret = AriaCSPINVOKE.ArRobotConfigPacketReader_getPowerbotChargeThreshold(swigCPtr);
    return ret;
  }

  public byte getPDBPort() {
    byte ret = AriaCSPINVOKE.ArRobotConfigPacketReader_getPDBPort(swigCPtr);
    return ret;
  }

  public int getGyroRateLimit() {
    int ret = AriaCSPINVOKE.ArRobotConfigPacketReader_getGyroRateLimit(swigCPtr);
    return ret;
  }

  public char getHighTemperatureShutdown() {
    char ret = AriaCSPINVOKE.ArRobotConfigPacketReader_getHighTemperatureShutdown(swigCPtr);
    return ret;
  }

  public int getPowerBits() {
    int ret = AriaCSPINVOKE.ArRobotConfigPacketReader_getPowerBits(swigCPtr);
    return ret;
  }

  public byte getBatteryType() {
    byte ret = AriaCSPINVOKE.ArRobotConfigPacketReader_getBatteryType(swigCPtr);
    return ret;
  }

  public int getStateOfChargeLow() {
    int ret = AriaCSPINVOKE.ArRobotConfigPacketReader_getStateOfChargeLow(swigCPtr);
    return ret;
  }

  public int getStateOfChargeShutdown() {
    int ret = AriaCSPINVOKE.ArRobotConfigPacketReader_getStateOfChargeShutdown(swigCPtr);
    return ret;
  }

  public string getFirmwareBootloaderVersion() {
    string ret = AriaCSPINVOKE.ArRobotConfigPacketReader_getFirmwareBootloaderVersion(swigCPtr);
    return ret;
  }

  public uint getConfigFlags() {
    uint ret = AriaCSPINVOKE.ArRobotConfigPacketReader_getConfigFlags(swigCPtr);
    return ret;
  }

  public int getGyroFWVersion() {
    int ret = AriaCSPINVOKE.ArRobotConfigPacketReader_getGyroFWVersion(swigCPtr);
    return ret;
  }

  public bool packetHandler(ArRobotPacket packet) {
    bool ret = AriaCSPINVOKE.ArRobotConfigPacketReader_packetHandler(swigCPtr, ArRobotPacket.getCPtr(packet));
    return ret;
  }

  public void connected() {
    AriaCSPINVOKE.ArRobotConfigPacketReader_connected(swigCPtr);
  }

}

}
