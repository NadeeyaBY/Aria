//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.8
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace AriaCS {

public class ArAction : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  public ArAction(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  public static global::System.Runtime.InteropServices.HandleRef getCPtr(ArAction obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~ArAction() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          AriaCSPINVOKE.delete_ArAction(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public ArAction(string name, string description) : this(AriaCSPINVOKE.new_ArAction__SWIG_0(name, description), true) {
    SwigDirectorConnect();
  }

  public ArAction(string name) : this(AriaCSPINVOKE.new_ArAction__SWIG_1(name), true) {
    SwigDirectorConnect();
  }

  public virtual bool isActive() {
    bool ret = (SwigDerivedClassHasMethod("isActive", swigMethodTypes0) ? AriaCSPINVOKE.ArAction_isActiveSwigExplicitArAction(swigCPtr) : AriaCSPINVOKE.ArAction_isActive(swigCPtr));
    return ret;
  }

  public virtual void activate() {
    if (SwigDerivedClassHasMethod("activate", swigMethodTypes1)) AriaCSPINVOKE.ArAction_activateSwigExplicitArAction(swigCPtr); else AriaCSPINVOKE.ArAction_activate(swigCPtr);
  }

  public virtual void deactivate() {
    if (SwigDerivedClassHasMethod("deactivate", swigMethodTypes2)) AriaCSPINVOKE.ArAction_deactivateSwigExplicitArAction(swigCPtr); else AriaCSPINVOKE.ArAction_deactivate(swigCPtr);
  }

  public virtual ArActionDesired fire(ArActionDesired currentDesired) {
    global::System.IntPtr cPtr = AriaCSPINVOKE.ArAction_fire(swigCPtr, ArActionDesired.getCPtr(currentDesired));
    ArActionDesired ret = (cPtr == global::System.IntPtr.Zero) ? null : new ArActionDesired(cPtr, false);
    if (AriaCSPINVOKE.SWIGPendingException.Pending) throw AriaCSPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual void setRobot(ArRobot robot) {
    if (SwigDerivedClassHasMethod("setRobot", swigMethodTypes4)) AriaCSPINVOKE.ArAction_setRobotSwigExplicitArAction(swigCPtr, ArRobot.getCPtr(robot)); else AriaCSPINVOKE.ArAction_setRobot(swigCPtr, ArRobot.getCPtr(robot));
  }

  public virtual int getNumArgs() {
    int ret = (SwigDerivedClassHasMethod("getNumArgs", swigMethodTypes5) ? AriaCSPINVOKE.ArAction_getNumArgsSwigExplicitArAction(swigCPtr) : AriaCSPINVOKE.ArAction_getNumArgs(swigCPtr));
    return ret;
  }

  public virtual ArArg getArg(int number) {
    global::System.IntPtr cPtr = (SwigDerivedClassHasMethod("getArg", swigMethodTypes6) ? AriaCSPINVOKE.ArAction_getArgSwigExplicitArAction(swigCPtr, number) : AriaCSPINVOKE.ArAction_getArg(swigCPtr, number));
    ArArg ret = (cPtr == global::System.IntPtr.Zero) ? null : new ArArg(cPtr, false);
    return ret;
  }

  public virtual string getName() {
    string ret = (SwigDerivedClassHasMethod("getName", swigMethodTypes7) ? AriaCSPINVOKE.ArAction_getNameSwigExplicitArAction(swigCPtr) : AriaCSPINVOKE.ArAction_getName(swigCPtr));
    return ret;
  }

  public virtual string getDescription() {
    string ret = (SwigDerivedClassHasMethod("getDescription", swigMethodTypes8) ? AriaCSPINVOKE.ArAction_getDescriptionSwigExplicitArAction(swigCPtr) : AriaCSPINVOKE.ArAction_getDescription(swigCPtr));
    return ret;
  }

  public virtual ArActionDesired getDesired() {
    global::System.IntPtr cPtr = (SwigDerivedClassHasMethod("getDesired", swigMethodTypes9) ? AriaCSPINVOKE.ArAction_getDesiredSwigExplicitArAction__SWIG_0(swigCPtr) : AriaCSPINVOKE.ArAction_getDesired__SWIG_0(swigCPtr));
    ArActionDesired ret = (cPtr == global::System.IntPtr.Zero) ? null : new ArActionDesired(cPtr, false);
    return ret;
  }

  public virtual void log(bool verbose) {
    if (SwigDerivedClassHasMethod("log", swigMethodTypes11)) AriaCSPINVOKE.ArAction_logSwigExplicitArAction__SWIG_0(swigCPtr, verbose); else AriaCSPINVOKE.ArAction_log__SWIG_0(swigCPtr, verbose);
  }

  public virtual void log() {
    if (SwigDerivedClassHasMethod("log", swigMethodTypes12)) AriaCSPINVOKE.ArAction_logSwigExplicitArAction__SWIG_1(swigCPtr); else AriaCSPINVOKE.ArAction_log__SWIG_1(swigCPtr);
  }

  public ArRobot getRobot() {
    global::System.IntPtr cPtr = AriaCSPINVOKE.ArAction_getRobot(swigCPtr);
    ArRobot ret = (cPtr == global::System.IntPtr.Zero) ? null : new ArRobot(cPtr, false);
    return ret;
  }

  public static void setDefaultActivationState(bool defaultActivationState) {
    AriaCSPINVOKE.ArAction_setDefaultActivationState(defaultActivationState);
  }

  public static bool getDefaultActivationState() {
    bool ret = AriaCSPINVOKE.ArAction_getDefaultActivationState();
    return ret;
  }

  public void setActionRobot(ArRobot robot) {
    AriaCSPINVOKE.ArAction_setActionRobot(swigCPtr, ArRobot.getCPtr(robot));
  }

  private void SwigDirectorConnect() {
    if (SwigDerivedClassHasMethod("isActive", swigMethodTypes0))
      swigDelegate0 = new SwigDelegateArAction_0(SwigDirectorisActive);
    if (SwigDerivedClassHasMethod("activate", swigMethodTypes1))
      swigDelegate1 = new SwigDelegateArAction_1(SwigDirectoractivate);
    if (SwigDerivedClassHasMethod("deactivate", swigMethodTypes2))
      swigDelegate2 = new SwigDelegateArAction_2(SwigDirectordeactivate);
    if (SwigDerivedClassHasMethod("fire", swigMethodTypes3))
      swigDelegate3 = new SwigDelegateArAction_3(SwigDirectorfire);
    if (SwigDerivedClassHasMethod("setRobot", swigMethodTypes4))
      swigDelegate4 = new SwigDelegateArAction_4(SwigDirectorsetRobot);
    if (SwigDerivedClassHasMethod("getNumArgs", swigMethodTypes5))
      swigDelegate5 = new SwigDelegateArAction_5(SwigDirectorgetNumArgs);
    if (SwigDerivedClassHasMethod("getArg", swigMethodTypes6))
      swigDelegate6 = new SwigDelegateArAction_6(SwigDirectorgetArg);
    if (SwigDerivedClassHasMethod("getName", swigMethodTypes7))
      swigDelegate7 = new SwigDelegateArAction_7(SwigDirectorgetName);
    if (SwigDerivedClassHasMethod("getDescription", swigMethodTypes8))
      swigDelegate8 = new SwigDelegateArAction_8(SwigDirectorgetDescription);
    if (SwigDerivedClassHasMethod("getDesired", swigMethodTypes9))
      swigDelegate9 = new SwigDelegateArAction_9(SwigDirectorgetDesired__SWIG_0);
    if (SwigDerivedClassHasMethod("getDesired", swigMethodTypes10))
      swigDelegate10 = new SwigDelegateArAction_10(SwigDirectorgetDesired__SWIG_1);
    if (SwigDerivedClassHasMethod("log", swigMethodTypes11))
      swigDelegate11 = new SwigDelegateArAction_11(SwigDirectorlog__SWIG_0);
    if (SwigDerivedClassHasMethod("log", swigMethodTypes12))
      swigDelegate12 = new SwigDelegateArAction_12(SwigDirectorlog__SWIG_1);
    AriaCSPINVOKE.ArAction_director_connect(swigCPtr, swigDelegate0, swigDelegate1, swigDelegate2, swigDelegate3, swigDelegate4, swigDelegate5, swigDelegate6, swigDelegate7, swigDelegate8, swigDelegate9, swigDelegate10, swigDelegate11, swigDelegate12);
  }

  private bool SwigDerivedClassHasMethod(string methodName, global::System.Type[] methodTypes) {
    global::System.Reflection.MethodInfo methodInfo = this.GetType().GetMethod(methodName, global::System.Reflection.BindingFlags.Public | global::System.Reflection.BindingFlags.NonPublic | global::System.Reflection.BindingFlags.Instance, null, methodTypes, null);
    bool hasDerivedMethod = methodInfo.DeclaringType.IsSubclassOf(typeof(ArAction));
    return hasDerivedMethod;
  }

  private bool SwigDirectorisActive() {
    return isActive();
  }

  private void SwigDirectoractivate() {
    activate();
  }

  private void SwigDirectordeactivate() {
    deactivate();
  }

  private global::System.IntPtr SwigDirectorfire(global::System.IntPtr currentDesired) {
    return ArActionDesired.getCPtr(fire(new ArActionDesired(currentDesired, false))).Handle;
  }

  private void SwigDirectorsetRobot(global::System.IntPtr robot) {
    setRobot((robot == global::System.IntPtr.Zero) ? null : new ArRobot(robot, false));
  }

  private int SwigDirectorgetNumArgs() {
    return getNumArgs();
  }

  private global::System.IntPtr SwigDirectorgetArg(int number) {
    return ArArg.getCPtr(getArg(number)).Handle;
  }

  private string SwigDirectorgetName() {
    return getName();
  }

  private string SwigDirectorgetDescription() {
    return getDescription();
  }

  private global::System.IntPtr SwigDirectorgetDesired__SWIG_0() {
    return ArActionDesired.getCPtr(getDesired()).Handle;
  }

  private global::System.IntPtr SwigDirectorgetDesired__SWIG_1() {
    return ArActionDesired.getCPtr(getDesired()).Handle;
  }

  private void SwigDirectorlog__SWIG_0(bool verbose) {
    log(verbose);
  }

  private void SwigDirectorlog__SWIG_1() {
    log();
  }

  public delegate bool SwigDelegateArAction_0();
  public delegate void SwigDelegateArAction_1();
  public delegate void SwigDelegateArAction_2();
  public delegate global::System.IntPtr SwigDelegateArAction_3(global::System.IntPtr currentDesired);
  public delegate void SwigDelegateArAction_4(global::System.IntPtr robot);
  public delegate int SwigDelegateArAction_5();
  public delegate global::System.IntPtr SwigDelegateArAction_6(int number);
  public delegate string SwigDelegateArAction_7();
  public delegate string SwigDelegateArAction_8();
  public delegate global::System.IntPtr SwigDelegateArAction_9();
  public delegate global::System.IntPtr SwigDelegateArAction_10();
  public delegate void SwigDelegateArAction_11(bool verbose);
  public delegate void SwigDelegateArAction_12();

  private SwigDelegateArAction_0 swigDelegate0;
  private SwigDelegateArAction_1 swigDelegate1;
  private SwigDelegateArAction_2 swigDelegate2;
  private SwigDelegateArAction_3 swigDelegate3;
  private SwigDelegateArAction_4 swigDelegate4;
  private SwigDelegateArAction_5 swigDelegate5;
  private SwigDelegateArAction_6 swigDelegate6;
  private SwigDelegateArAction_7 swigDelegate7;
  private SwigDelegateArAction_8 swigDelegate8;
  private SwigDelegateArAction_9 swigDelegate9;
  private SwigDelegateArAction_10 swigDelegate10;
  private SwigDelegateArAction_11 swigDelegate11;
  private SwigDelegateArAction_12 swigDelegate12;

  private static global::System.Type[] swigMethodTypes0 = new global::System.Type[] {  };
  private static global::System.Type[] swigMethodTypes1 = new global::System.Type[] {  };
  private static global::System.Type[] swigMethodTypes2 = new global::System.Type[] {  };
  private static global::System.Type[] swigMethodTypes3 = new global::System.Type[] { typeof(ArActionDesired) };
  private static global::System.Type[] swigMethodTypes4 = new global::System.Type[] { typeof(ArRobot) };
  private static global::System.Type[] swigMethodTypes5 = new global::System.Type[] {  };
  private static global::System.Type[] swigMethodTypes6 = new global::System.Type[] { typeof(int) };
  private static global::System.Type[] swigMethodTypes7 = new global::System.Type[] {  };
  private static global::System.Type[] swigMethodTypes8 = new global::System.Type[] {  };
  private static global::System.Type[] swigMethodTypes9 = new global::System.Type[] {  };
  private static global::System.Type[] swigMethodTypes10 = new global::System.Type[] {  };
  private static global::System.Type[] swigMethodTypes11 = new global::System.Type[] { typeof(bool) };
  private static global::System.Type[] swigMethodTypes12 = new global::System.Type[] {  };
}

}
