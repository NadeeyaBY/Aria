//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.8
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace AriaCS {

public class ArRecurrentTask : ArASyncTask {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  public ArRecurrentTask(global::System.IntPtr cPtr, bool cMemoryOwn) : base(AriaCSPINVOKE.ArRecurrentTask_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  public static global::System.Runtime.InteropServices.HandleRef getCPtr(ArRecurrentTask obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~ArRecurrentTask() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          AriaCSPINVOKE.delete_ArRecurrentTask(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public virtual void task() {
    AriaCSPINVOKE.ArRecurrentTask_task(swigCPtr);
  }

  public void go() {
    AriaCSPINVOKE.ArRecurrentTask_go(swigCPtr);
  }

  public int done() {
    int ret = AriaCSPINVOKE.ArRecurrentTask_done(swigCPtr);
    return ret;
  }

  public void reset() {
    AriaCSPINVOKE.ArRecurrentTask_reset(swigCPtr);
  }

  public void kill() {
    AriaCSPINVOKE.ArRecurrentTask_kill(swigCPtr);
  }

  public override SWIGTYPE_p_void runThread(SWIGTYPE_p_void ptr) {
    global::System.IntPtr cPtr = AriaCSPINVOKE.ArRecurrentTask_runThread(swigCPtr, SWIGTYPE_p_void.getCPtr(ptr));
    SWIGTYPE_p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
    return ret;
  }

}

}
