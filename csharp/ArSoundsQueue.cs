//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.8
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace AriaCS {

public class ArSoundsQueue : ArASyncTask {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  public ArSoundsQueue(global::System.IntPtr cPtr, bool cMemoryOwn) : base(AriaCSPINVOKE.ArSoundsQueue_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  public static global::System.Runtime.InteropServices.HandleRef getCPtr(ArSoundsQueue obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~ArSoundsQueue() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          AriaCSPINVOKE.delete_ArSoundsQueue(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public class Item : global::System.IDisposable {
    private global::System.Runtime.InteropServices.HandleRef swigCPtr;
    protected bool swigCMemOwn;
  
    public Item(global::System.IntPtr cPtr, bool cMemoryOwn) {
      swigCMemOwn = cMemoryOwn;
      swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
    }
  
    public static global::System.Runtime.InteropServices.HandleRef getCPtr(Item obj) {
      return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
    }
  
    ~Item() {
      Dispose();
    }
  
    public virtual void Dispose() {
      lock(this) {
        if (swigCPtr.Handle != global::System.IntPtr.Zero) {
          if (swigCMemOwn) {
            swigCMemOwn = false;
            AriaCSPINVOKE.delete_ArSoundsQueue_Item(swigCPtr);
          }
          swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
        }
        global::System.GC.SuppressFinalize(this);
      }
    }
  
    public string data {
      set {
        AriaCSPINVOKE.ArSoundsQueue_Item_data_set(swigCPtr, value);
        if (AriaCSPINVOKE.SWIGPendingException.Pending) throw AriaCSPINVOKE.SWIGPendingException.Retrieve();
      } 
      get {
        string ret = AriaCSPINVOKE.ArSoundsQueue_Item_data_get(swigCPtr);
        if (AriaCSPINVOKE.SWIGPendingException.Pending) throw AriaCSPINVOKE.SWIGPendingException.Retrieve();
        return ret;
      } 
    }
  
    public ArSoundsQueue.ItemType type {
      set {
        AriaCSPINVOKE.ArSoundsQueue_Item_type_set(swigCPtr, (int)value);
      } 
      get {
        ArSoundsQueue.ItemType ret = (ArSoundsQueue.ItemType)AriaCSPINVOKE.ArSoundsQueue_Item_type_get(swigCPtr);
        return ret;
      } 
    }
  
    public string _params {
      set {
        AriaCSPINVOKE.ArSoundsQueue_Item__params_set(swigCPtr, value);
        if (AriaCSPINVOKE.SWIGPendingException.Pending) throw AriaCSPINVOKE.SWIGPendingException.Retrieve();
      } 
      get {
        string ret = AriaCSPINVOKE.ArSoundsQueue_Item__params_get(swigCPtr);
        if (AriaCSPINVOKE.SWIGPendingException.Pending) throw AriaCSPINVOKE.SWIGPendingException.Retrieve();
        return ret;
      } 
    }
  
    public int priority {
      set {
        AriaCSPINVOKE.ArSoundsQueue_Item_priority_set(swigCPtr, value);
      } 
      get {
        int ret = AriaCSPINVOKE.ArSoundsQueue_Item_priority_get(swigCPtr);
        return ret;
      } 
    }
  
    public SWIGTYPE_p_std__listT_ArFunctor_p_t interruptCallbacks {
      set {
        AriaCSPINVOKE.ArSoundsQueue_Item_interruptCallbacks_set(swigCPtr, SWIGTYPE_p_std__listT_ArFunctor_p_t.getCPtr(value));
      } 
      get {
        global::System.IntPtr cPtr = AriaCSPINVOKE.ArSoundsQueue_Item_interruptCallbacks_get(swigCPtr);
        SWIGTYPE_p_std__listT_ArFunctor_p_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_std__listT_ArFunctor_p_t(cPtr, false);
        return ret;
      } 
    }
  
    public SWIGTYPE_p_std__listT_ArRetFunctor2T_bool_char_const_p_char_const_p_t_p_t playCallbacks {
      set {
        AriaCSPINVOKE.ArSoundsQueue_Item_playCallbacks_set(swigCPtr, SWIGTYPE_p_std__listT_ArRetFunctor2T_bool_char_const_p_char_const_p_t_p_t.getCPtr(value));
        if (AriaCSPINVOKE.SWIGPendingException.Pending) throw AriaCSPINVOKE.SWIGPendingException.Retrieve();
      } 
      get {
        SWIGTYPE_p_std__listT_ArRetFunctor2T_bool_char_const_p_char_const_p_t_p_t ret = new SWIGTYPE_p_std__listT_ArRetFunctor2T_bool_char_const_p_char_const_p_t_p_t(AriaCSPINVOKE.ArSoundsQueue_Item_playCallbacks_get(swigCPtr), true);
        if (AriaCSPINVOKE.SWIGPendingException.Pending) throw AriaCSPINVOKE.SWIGPendingException.Retrieve();
        return ret;
      } 
    }
  
    public SWIGTYPE_p_std__listT_ArFunctor_p_t doneCallbacks {
      set {
        AriaCSPINVOKE.ArSoundsQueue_Item_doneCallbacks_set(swigCPtr, SWIGTYPE_p_std__listT_ArFunctor_p_t.getCPtr(value));
      } 
      get {
        global::System.IntPtr cPtr = AriaCSPINVOKE.ArSoundsQueue_Item_doneCallbacks_get(swigCPtr);
        SWIGTYPE_p_std__listT_ArFunctor_p_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_std__listT_ArFunctor_p_t(cPtr, false);
        return ret;
      } 
    }
  
    public SWIGTYPE_p_std__listT_ArRetFunctorT_bool_t_p_t playbackConditionCallbacks {
      set {
        AriaCSPINVOKE.ArSoundsQueue_Item_playbackConditionCallbacks_set(swigCPtr, SWIGTYPE_p_std__listT_ArRetFunctorT_bool_t_p_t.getCPtr(value));
      } 
      get {
        global::System.IntPtr cPtr = AriaCSPINVOKE.ArSoundsQueue_Item_playbackConditionCallbacks_get(swigCPtr);
        SWIGTYPE_p_std__listT_ArRetFunctorT_bool_t_p_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_std__listT_ArRetFunctorT_bool_t_p_t(cPtr, false);
        return ret;
      } 
    }
  
    public Item() : this(AriaCSPINVOKE.new_ArSoundsQueue_Item__SWIG_0(), true) {
    }
  
    public Item(string _data, ArSoundsQueue.ItemType _type, string _params, int priority) : this(AriaCSPINVOKE.new_ArSoundsQueue_Item__SWIG_1(_data, (int)_type, _params, priority), true) {
      if (AriaCSPINVOKE.SWIGPendingException.Pending) throw AriaCSPINVOKE.SWIGPendingException.Retrieve();
    }
  
    public Item(string _data, ArSoundsQueue.ItemType _type, string _params) : this(AriaCSPINVOKE.new_ArSoundsQueue_Item__SWIG_2(_data, (int)_type, _params), true) {
      if (AriaCSPINVOKE.SWIGPendingException.Pending) throw AriaCSPINVOKE.SWIGPendingException.Retrieve();
    }
  
    public Item(string _data, ArSoundsQueue.ItemType _type) : this(AriaCSPINVOKE.new_ArSoundsQueue_Item__SWIG_3(_data, (int)_type), true) {
      if (AriaCSPINVOKE.SWIGPendingException.Pending) throw AriaCSPINVOKE.SWIGPendingException.Retrieve();
    }
  
    public Item(string _data, ArSoundsQueue.ItemType _type, string _params, int priority, SWIGTYPE_p_std__listT_ArRetFunctor2T_bool_char_const_p_char_const_p_t_p_t callbacks) : this(AriaCSPINVOKE.new_ArSoundsQueue_Item__SWIG_4(_data, (int)_type, _params, priority, SWIGTYPE_p_std__listT_ArRetFunctor2T_bool_char_const_p_char_const_p_t_p_t.getCPtr(callbacks)), true) {
      if (AriaCSPINVOKE.SWIGPendingException.Pending) throw AriaCSPINVOKE.SWIGPendingException.Retrieve();
    }
  
    public Item(ArSoundsQueue.Item toCopy) : this(AriaCSPINVOKE.new_ArSoundsQueue_Item__SWIG_5(ArSoundsQueue.Item.getCPtr(toCopy)), true) {
      if (AriaCSPINVOKE.SWIGPendingException.Pending) throw AriaCSPINVOKE.SWIGPendingException.Retrieve();
    }
  
  }

  public ArSoundsQueue() : this(AriaCSPINVOKE.new_ArSoundsQueue__SWIG_0(), true) {
  }

  public ArSoundsQueue(ArRetFunctor_Bool speakInitCB, SWIGTYPE_p_ArRetFunctor2T_bool_char_const_p_char_const_p_t speakCB, ArFunctor interruptSpeechCB, ArRetFunctor_Bool playInitCB, SWIGTYPE_p_ArRetFunctor2T_bool_char_const_p_char_const_p_t playFileCB, ArFunctor interruptFileCB) : this(AriaCSPINVOKE.new_ArSoundsQueue__SWIG_1(ArRetFunctor_Bool.getCPtr(speakInitCB), SWIGTYPE_p_ArRetFunctor2T_bool_char_const_p_char_const_p_t.getCPtr(speakCB), ArFunctor.getCPtr(interruptSpeechCB), ArRetFunctor_Bool.getCPtr(playInitCB), SWIGTYPE_p_ArRetFunctor2T_bool_char_const_p_char_const_p_t.getCPtr(playFileCB), ArFunctor.getCPtr(interruptFileCB)), true) {
  }

  public ArSoundsQueue(ArRetFunctor_Bool speakInitCB, SWIGTYPE_p_ArRetFunctor2T_bool_char_const_p_char_const_p_t speakCB, ArFunctor interruptSpeechCB, ArRetFunctor_Bool playInitCB, SWIGTYPE_p_ArRetFunctor2T_bool_char_const_p_char_const_p_t playFileCB) : this(AriaCSPINVOKE.new_ArSoundsQueue__SWIG_2(ArRetFunctor_Bool.getCPtr(speakInitCB), SWIGTYPE_p_ArRetFunctor2T_bool_char_const_p_char_const_p_t.getCPtr(speakCB), ArFunctor.getCPtr(interruptSpeechCB), ArRetFunctor_Bool.getCPtr(playInitCB), SWIGTYPE_p_ArRetFunctor2T_bool_char_const_p_char_const_p_t.getCPtr(playFileCB)), true) {
  }

  public ArSoundsQueue(ArRetFunctor_Bool speakInitCB, SWIGTYPE_p_ArRetFunctor2T_bool_char_const_p_char_const_p_t speakCB, ArFunctor interruptSpeechCB, ArRetFunctor_Bool playInitCB) : this(AriaCSPINVOKE.new_ArSoundsQueue__SWIG_3(ArRetFunctor_Bool.getCPtr(speakInitCB), SWIGTYPE_p_ArRetFunctor2T_bool_char_const_p_char_const_p_t.getCPtr(speakCB), ArFunctor.getCPtr(interruptSpeechCB), ArRetFunctor_Bool.getCPtr(playInitCB)), true) {
  }

  public ArSoundsQueue(ArRetFunctor_Bool speakInitCB, SWIGTYPE_p_ArRetFunctor2T_bool_char_const_p_char_const_p_t speakCB, ArFunctor interruptSpeechCB) : this(AriaCSPINVOKE.new_ArSoundsQueue__SWIG_4(ArRetFunctor_Bool.getCPtr(speakInitCB), SWIGTYPE_p_ArRetFunctor2T_bool_char_const_p_char_const_p_t.getCPtr(speakCB), ArFunctor.getCPtr(interruptSpeechCB)), true) {
  }

  public ArSoundsQueue(ArRetFunctor_Bool speakInitCB, SWIGTYPE_p_ArRetFunctor2T_bool_char_const_p_char_const_p_t speakCB) : this(AriaCSPINVOKE.new_ArSoundsQueue__SWIG_5(ArRetFunctor_Bool.getCPtr(speakInitCB), SWIGTYPE_p_ArRetFunctor2T_bool_char_const_p_char_const_p_t.getCPtr(speakCB)), true) {
  }

  public ArSoundsQueue(ArRetFunctor_Bool speakInitCB) : this(AriaCSPINVOKE.new_ArSoundsQueue__SWIG_6(ArRetFunctor_Bool.getCPtr(speakInitCB)), true) {
  }

  public ArSoundsQueue(ArSpeechSynth speechSynthesizer, ArRetFunctor_Bool playInitCB, SWIGTYPE_p_ArRetFunctor2T_bool_char_const_p_char_const_p_t playFileCB, ArFunctor interruptFileCB) : this(AriaCSPINVOKE.new_ArSoundsQueue__SWIG_7(ArSpeechSynth.getCPtr(speechSynthesizer), ArRetFunctor_Bool.getCPtr(playInitCB), SWIGTYPE_p_ArRetFunctor2T_bool_char_const_p_char_const_p_t.getCPtr(playFileCB), ArFunctor.getCPtr(interruptFileCB)), true) {
  }

  public ArSoundsQueue(ArSpeechSynth speechSynthesizer, ArRetFunctor_Bool playInitCB, SWIGTYPE_p_ArRetFunctor2T_bool_char_const_p_char_const_p_t playFileCB) : this(AriaCSPINVOKE.new_ArSoundsQueue__SWIG_8(ArSpeechSynth.getCPtr(speechSynthesizer), ArRetFunctor_Bool.getCPtr(playInitCB), SWIGTYPE_p_ArRetFunctor2T_bool_char_const_p_char_const_p_t.getCPtr(playFileCB)), true) {
  }

  public ArSoundsQueue(ArSpeechSynth speechSynthesizer, ArRetFunctor_Bool playInitCB) : this(AriaCSPINVOKE.new_ArSoundsQueue__SWIG_9(ArSpeechSynth.getCPtr(speechSynthesizer), ArRetFunctor_Bool.getCPtr(playInitCB)), true) {
  }

  public ArSoundsQueue(ArSpeechSynth speechSynthesizer) : this(AriaCSPINVOKE.new_ArSoundsQueue__SWIG_10(ArSpeechSynth.getCPtr(speechSynthesizer)), true) {
  }

  public void addInitCallback(ArRetFunctor_Bool cb) {
    AriaCSPINVOKE.ArSoundsQueue_addInitCallback(swigCPtr, ArRetFunctor_Bool.getCPtr(cb));
  }

  public void setSpeakInitCallback(ArRetFunctor_Bool cb) {
    AriaCSPINVOKE.ArSoundsQueue_setSpeakInitCallback(swigCPtr, ArRetFunctor_Bool.getCPtr(cb));
  }

  public void addItem(ArSoundsQueue.Item item) {
    AriaCSPINVOKE.ArSoundsQueue_addItem__SWIG_0(swigCPtr, ArSoundsQueue.Item.getCPtr(item));
    if (AriaCSPINVOKE.SWIGPendingException.Pending) throw AriaCSPINVOKE.SWIGPendingException.Retrieve();
  }

  public void addItem(ArSoundsQueue.ItemType type, string data, SWIGTYPE_p_std__listT_ArRetFunctor2T_bool_char_const_p_char_const_p_t_p_t callbacks, int priority, string arg4) {
    AriaCSPINVOKE.ArSoundsQueue_addItem__SWIG_1(swigCPtr, (int)type, data, SWIGTYPE_p_std__listT_ArRetFunctor2T_bool_char_const_p_char_const_p_t_p_t.getCPtr(callbacks), priority, arg4);
    if (AriaCSPINVOKE.SWIGPendingException.Pending) throw AriaCSPINVOKE.SWIGPendingException.Retrieve();
  }

  public void addItem(ArSoundsQueue.ItemType type, string data, SWIGTYPE_p_std__listT_ArRetFunctor2T_bool_char_const_p_char_const_p_t_p_t callbacks, int priority) {
    AriaCSPINVOKE.ArSoundsQueue_addItem__SWIG_2(swigCPtr, (int)type, data, SWIGTYPE_p_std__listT_ArRetFunctor2T_bool_char_const_p_char_const_p_t_p_t.getCPtr(callbacks), priority);
    if (AriaCSPINVOKE.SWIGPendingException.Pending) throw AriaCSPINVOKE.SWIGPendingException.Retrieve();
  }

  public void addItem(ArSoundsQueue.ItemType type, string data, SWIGTYPE_p_std__listT_ArRetFunctor2T_bool_char_const_p_char_const_p_t_p_t callbacks) {
    AriaCSPINVOKE.ArSoundsQueue_addItem__SWIG_3(swigCPtr, (int)type, data, SWIGTYPE_p_std__listT_ArRetFunctor2T_bool_char_const_p_char_const_p_t_p_t.getCPtr(callbacks));
    if (AriaCSPINVOKE.SWIGPendingException.Pending) throw AriaCSPINVOKE.SWIGPendingException.Retrieve();
  }

  public bool isInitialized() {
    bool ret = AriaCSPINVOKE.ArSoundsQueue_isInitialized(swigCPtr);
    return ret;
  }

  public bool isSpeakingOrPlaying() {
    bool ret = AriaCSPINVOKE.ArSoundsQueue_isSpeakingOrPlaying(swigCPtr);
    return ret;
  }

  public bool isPlaying() {
    bool ret = AriaCSPINVOKE.ArSoundsQueue_isPlaying(swigCPtr);
    return ret;
  }

  public bool isSpeaking() {
    bool ret = AriaCSPINVOKE.ArSoundsQueue_isSpeaking(swigCPtr);
    return ret;
  }

  public override void run() {
    AriaCSPINVOKE.ArSoundsQueue_run(swigCPtr);
  }

  public override void runAsync() {
    AriaCSPINVOKE.ArSoundsQueue_runAsync(swigCPtr);
  }

  public void pause() {
    AriaCSPINVOKE.ArSoundsQueue_pause(swigCPtr);
  }

  public void resume() {
    AriaCSPINVOKE.ArSoundsQueue_resume(swigCPtr);
  }

  public bool isPaused() {
    bool ret = AriaCSPINVOKE.ArSoundsQueue_isPaused(swigCPtr);
    return ret;
  }

  public void interrupt() {
    AriaCSPINVOKE.ArSoundsQueue_interrupt(swigCPtr);
  }

  public void clearQueue() {
    AriaCSPINVOKE.ArSoundsQueue_clearQueue(swigCPtr);
  }

  public void stop() {
    AriaCSPINVOKE.ArSoundsQueue_stop(swigCPtr);
  }

  public ArFunctor getPauseCallback() {
    global::System.IntPtr cPtr = AriaCSPINVOKE.ArSoundsQueue_getPauseCallback(swigCPtr);
    ArFunctor ret = (cPtr == global::System.IntPtr.Zero) ? null : new ArFunctor(cPtr, false);
    return ret;
  }

  public ArFunctor getResumeCallback() {
    global::System.IntPtr cPtr = AriaCSPINVOKE.ArSoundsQueue_getResumeCallback(swigCPtr);
    ArFunctor ret = (cPtr == global::System.IntPtr.Zero) ? null : new ArFunctor(cPtr, false);
    return ret;
  }

  public uint getCurrentQueueSize() {
    uint ret = AriaCSPINVOKE.ArSoundsQueue_getCurrentQueueSize(swigCPtr);
    return ret;
  }

  public void addSoundStartedCallback(ArFunctor f) {
    AriaCSPINVOKE.ArSoundsQueue_addSoundStartedCallback(swigCPtr, ArFunctor.getCPtr(f));
  }

  public void remSoundStartedCallback(ArFunctor f) {
    AriaCSPINVOKE.ArSoundsQueue_remSoundStartedCallback(swigCPtr, ArFunctor.getCPtr(f));
  }

  public void addSoundFinishedCallback(ArFunctor f) {
    AriaCSPINVOKE.ArSoundsQueue_addSoundFinishedCallback(swigCPtr, ArFunctor.getCPtr(f));
  }

  public void remSoundFinishedCallback(ArFunctor f) {
    AriaCSPINVOKE.ArSoundsQueue_remSoundFinishedCallback(swigCPtr, ArFunctor.getCPtr(f));
  }

  public void addSoundItemStartedCallback(SWIGTYPE_p_ArFunctor1T_ArSoundsQueue__Item_t f) {
    AriaCSPINVOKE.ArSoundsQueue_addSoundItemStartedCallback(swigCPtr, SWIGTYPE_p_ArFunctor1T_ArSoundsQueue__Item_t.getCPtr(f));
  }

  public void remSoundItemStartedCallback(SWIGTYPE_p_ArFunctor1T_ArSoundsQueue__Item_t f) {
    AriaCSPINVOKE.ArSoundsQueue_remSoundItemStartedCallback(swigCPtr, SWIGTYPE_p_ArFunctor1T_ArSoundsQueue__Item_t.getCPtr(f));
  }

  public void addSoundItemFinishedCallback(SWIGTYPE_p_ArFunctor1T_ArSoundsQueue__Item_t f) {
    AriaCSPINVOKE.ArSoundsQueue_addSoundItemFinishedCallback(swigCPtr, SWIGTYPE_p_ArFunctor1T_ArSoundsQueue__Item_t.getCPtr(f));
  }

  public void remSoundItemFinishedCallback(SWIGTYPE_p_ArFunctor1T_ArSoundsQueue__Item_t f) {
    AriaCSPINVOKE.ArSoundsQueue_remSoundItemFinishedCallback(swigCPtr, SWIGTYPE_p_ArFunctor1T_ArSoundsQueue__Item_t.getCPtr(f));
  }

  public void addQueueNonemptyCallback(ArFunctor f) {
    AriaCSPINVOKE.ArSoundsQueue_addQueueNonemptyCallback(swigCPtr, ArFunctor.getCPtr(f));
  }

  public void remQueueNonemptyCallback(ArFunctor f) {
    AriaCSPINVOKE.ArSoundsQueue_remQueueNonemptyCallback(swigCPtr, ArFunctor.getCPtr(f));
  }

  public void addQueueEmptyCallback(ArFunctor f) {
    AriaCSPINVOKE.ArSoundsQueue_addQueueEmptyCallback(swigCPtr, ArFunctor.getCPtr(f));
  }

  public void remQueueEmptyCallback(ArFunctor f) {
    AriaCSPINVOKE.ArSoundsQueue_remQueueEmptyCallback(swigCPtr, ArFunctor.getCPtr(f));
  }

  public SWIGTYPE_p_std__setT_int_t findPendingItems(string item) {
    SWIGTYPE_p_std__setT_int_t ret = new SWIGTYPE_p_std__setT_int_t(AriaCSPINVOKE.ArSoundsQueue_findPendingItems(swigCPtr, item), true);
    return ret;
  }

  public void removePendingItems(string item, ArSoundsQueue.ItemType type) {
    AriaCSPINVOKE.ArSoundsQueue_removePendingItems__SWIG_0(swigCPtr, item, (int)type);
  }

  public void removePendingItems(string data) {
    AriaCSPINVOKE.ArSoundsQueue_removePendingItems__SWIG_1(swigCPtr, data);
  }

  public void removePendingItemsByPriority(int priority) {
    AriaCSPINVOKE.ArSoundsQueue_removePendingItemsByPriority(swigCPtr, priority);
  }

  public void removePendingItemsByPriorityWithType(int priority, ArSoundsQueue.ItemType type) {
    AriaCSPINVOKE.ArSoundsQueue_removePendingItemsByPriorityWithType(swigCPtr, priority, (int)type);
  }

  public void removePendingItemsByType(ArSoundsQueue.ItemType type) {
    AriaCSPINVOKE.ArSoundsQueue_removePendingItemsByType(swigCPtr, (int)type);
  }

  public void removeItems(int priority) {
    AriaCSPINVOKE.ArSoundsQueue_removeItems__SWIG_0(swigCPtr, priority);
  }

  public void removeItems(ArSoundsQueue.Item item) {
    AriaCSPINVOKE.ArSoundsQueue_removeItems__SWIG_1(swigCPtr, ArSoundsQueue.Item.getCPtr(item));
    if (AriaCSPINVOKE.SWIGPendingException.Pending) throw AriaCSPINVOKE.SWIGPendingException.Retrieve();
  }

  public string nextItemByType(ArSoundsQueue.ItemType type) {
    string ret = AriaCSPINVOKE.ArSoundsQueue_nextItemByType(swigCPtr, (int)type);
    return ret;
  }

  public string nextItemByPriority(int priority) {
    string ret = AriaCSPINVOKE.ArSoundsQueue_nextItemByPriority(swigCPtr, priority);
    return ret;
  }

  public string nextItemByTypeAndPriority(ArSoundsQueue.ItemType type, int priority) {
    string ret = AriaCSPINVOKE.ArSoundsQueue_nextItemByTypeAndPriority(swigCPtr, (int)type, priority);
    return ret;
  }

  public void setSpeakCallback(SWIGTYPE_p_ArRetFunctor2T_bool_char_const_p_char_const_p_t cb) {
    AriaCSPINVOKE.ArSoundsQueue_setSpeakCallback(swigCPtr, SWIGTYPE_p_ArRetFunctor2T_bool_char_const_p_char_const_p_t.getCPtr(cb));
  }

  public void setInterruptSpeechCallback(ArFunctor cb) {
    AriaCSPINVOKE.ArSoundsQueue_setInterruptSpeechCallback(swigCPtr, ArFunctor.getCPtr(cb));
  }

  public void setPlayFileCallback(SWIGTYPE_p_ArRetFunctor2T_bool_char_const_p_char_const_p_t cb) {
    AriaCSPINVOKE.ArSoundsQueue_setPlayFileCallback(swigCPtr, SWIGTYPE_p_ArRetFunctor2T_bool_char_const_p_char_const_p_t.getCPtr(cb));
  }

  public void setPlayWavFileCallback(SWIGTYPE_p_ArRetFunctor2T_bool_char_const_p_char_const_p_t cb) {
    AriaCSPINVOKE.ArSoundsQueue_setPlayWavFileCallback(swigCPtr, SWIGTYPE_p_ArRetFunctor2T_bool_char_const_p_char_const_p_t.getCPtr(cb));
  }

  public void setInterruptFileCallback(ArFunctor cb) {
    AriaCSPINVOKE.ArSoundsQueue_setInterruptFileCallback(swigCPtr, ArFunctor.getCPtr(cb));
  }

  public void setInterruptWavFileCallback(ArFunctor cb) {
    AriaCSPINVOKE.ArSoundsQueue_setInterruptWavFileCallback(swigCPtr, ArFunctor.getCPtr(cb));
  }

  public void speak(string str) {
    AriaCSPINVOKE.ArSoundsQueue_speak(swigCPtr, str);
  }

  public void play(string filename) {
    AriaCSPINVOKE.ArSoundsQueue_play(swigCPtr, filename);
  }

  public ArSoundsQueue.Item createDefaultSpeechItem(string speech) {
    ArSoundsQueue.Item ret = new ArSoundsQueue.Item(AriaCSPINVOKE.ArSoundsQueue_createDefaultSpeechItem__SWIG_0(swigCPtr, speech), true);
    return ret;
  }

  public ArSoundsQueue.Item createDefaultSpeechItem() {
    ArSoundsQueue.Item ret = new ArSoundsQueue.Item(AriaCSPINVOKE.ArSoundsQueue_createDefaultSpeechItem__SWIG_1(swigCPtr), true);
    return ret;
  }

  public ArSoundsQueue.Item createDefaultFileItem(string filename) {
    ArSoundsQueue.Item ret = new ArSoundsQueue.Item(AriaCSPINVOKE.ArSoundsQueue_createDefaultFileItem__SWIG_0(swigCPtr, filename), true);
    return ret;
  }

  public ArSoundsQueue.Item createDefaultFileItem() {
    ArSoundsQueue.Item ret = new ArSoundsQueue.Item(AriaCSPINVOKE.ArSoundsQueue_createDefaultFileItem__SWIG_1(swigCPtr), true);
    return ret;
  }

  public void setDefaultPlayConditionCB(ArRetFunctor_Bool f) {
    AriaCSPINVOKE.ArSoundsQueue_setDefaultPlayConditionCB(swigCPtr, ArRetFunctor_Bool.getCPtr(f));
  }

  public override SWIGTYPE_p_void runThread(SWIGTYPE_p_void arg) {
    global::System.IntPtr cPtr = AriaCSPINVOKE.ArSoundsQueue_runThread(swigCPtr, SWIGTYPE_p_void.getCPtr(arg));
    SWIGTYPE_p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
    return ret;
  }

  public enum ItemType {
    SPEECH,
    SOUND_FILE,
    SOUND_DATA,
    OTHER
  }

}

}
