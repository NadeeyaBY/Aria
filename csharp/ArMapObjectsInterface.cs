//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.8
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace AriaCS {

public class ArMapObjectsInterface : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  public ArMapObjectsInterface(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  public static global::System.Runtime.InteropServices.HandleRef getCPtr(ArMapObjectsInterface obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~ArMapObjectsInterface() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          AriaCSPINVOKE.delete_ArMapObjectsInterface(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public virtual ArMapObject findFirstMapObject(string name, string type, bool isIncludeWithHeading) {
    global::System.IntPtr cPtr = AriaCSPINVOKE.ArMapObjectsInterface_findFirstMapObject__SWIG_0(swigCPtr, name, type, isIncludeWithHeading);
    ArMapObject ret = (cPtr == global::System.IntPtr.Zero) ? null : new ArMapObject(cPtr, false);
    return ret;
  }

  public virtual ArMapObject findFirstMapObject(string name, string type) {
    global::System.IntPtr cPtr = AriaCSPINVOKE.ArMapObjectsInterface_findFirstMapObject__SWIG_1(swigCPtr, name, type);
    ArMapObject ret = (cPtr == global::System.IntPtr.Zero) ? null : new ArMapObject(cPtr, false);
    return ret;
  }

  public virtual ArMapObject findMapObject(string name, string type, bool isIncludeWithHeading) {
    global::System.IntPtr cPtr = AriaCSPINVOKE.ArMapObjectsInterface_findMapObject__SWIG_0(swigCPtr, name, type, isIncludeWithHeading);
    ArMapObject ret = (cPtr == global::System.IntPtr.Zero) ? null : new ArMapObject(cPtr, false);
    return ret;
  }

  public virtual ArMapObject findMapObject(string name, string type) {
    global::System.IntPtr cPtr = AriaCSPINVOKE.ArMapObjectsInterface_findMapObject__SWIG_1(swigCPtr, name, type);
    ArMapObject ret = (cPtr == global::System.IntPtr.Zero) ? null : new ArMapObject(cPtr, false);
    return ret;
  }

  public virtual ArMapObject findMapObject(string name) {
    global::System.IntPtr cPtr = AriaCSPINVOKE.ArMapObjectsInterface_findMapObject__SWIG_2(swigCPtr, name);
    ArMapObject ret = (cPtr == global::System.IntPtr.Zero) ? null : new ArMapObject(cPtr, false);
    return ret;
  }

  public virtual SWIGTYPE_p_std__listT_ArMapObject_p_t findMapObjectsOfType(string type, bool isIncludeWithHeading) {
    SWIGTYPE_p_std__listT_ArMapObject_p_t ret = new SWIGTYPE_p_std__listT_ArMapObject_p_t(AriaCSPINVOKE.ArMapObjectsInterface_findMapObjectsOfType__SWIG_0(swigCPtr, type, isIncludeWithHeading), true);
    return ret;
  }

  public virtual SWIGTYPE_p_std__listT_ArMapObject_p_t findMapObjectsOfType(string type) {
    SWIGTYPE_p_std__listT_ArMapObject_p_t ret = new SWIGTYPE_p_std__listT_ArMapObject_p_t(AriaCSPINVOKE.ArMapObjectsInterface_findMapObjectsOfType__SWIG_1(swigCPtr, type), true);
    return ret;
  }

  public virtual SWIGTYPE_p_std__listT_ArMapObject_p_t getMapObjects() {
    global::System.IntPtr cPtr = AriaCSPINVOKE.ArMapObjectsInterface_getMapObjects(swigCPtr);
    SWIGTYPE_p_std__listT_ArMapObject_p_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_std__listT_ArMapObject_p_t(cPtr, false);
    return ret;
  }

  public virtual void setMapObjects(SWIGTYPE_p_std__listT_ArMapObject_p_t mapObjects, bool isSortedObjects, SWIGTYPE_p_ArMapChangeDetails changeDetails) {
    AriaCSPINVOKE.ArMapObjectsInterface_setMapObjects__SWIG_0(swigCPtr, SWIGTYPE_p_std__listT_ArMapObject_p_t.getCPtr(mapObjects), isSortedObjects, SWIGTYPE_p_ArMapChangeDetails.getCPtr(changeDetails));
  }

  public virtual void setMapObjects(SWIGTYPE_p_std__listT_ArMapObject_p_t mapObjects, bool isSortedObjects) {
    AriaCSPINVOKE.ArMapObjectsInterface_setMapObjects__SWIG_1(swigCPtr, SWIGTYPE_p_std__listT_ArMapObject_p_t.getCPtr(mapObjects), isSortedObjects);
  }

  public virtual void setMapObjects(SWIGTYPE_p_std__listT_ArMapObject_p_t mapObjects) {
    AriaCSPINVOKE.ArMapObjectsInterface_setMapObjects__SWIG_2(swigCPtr, SWIGTYPE_p_std__listT_ArMapObject_p_t.getCPtr(mapObjects));
  }

  public virtual void writeObjectListToFunctor(ArFunctor1_CString functor, string endOfLineChars) {
    AriaCSPINVOKE.ArMapObjectsInterface_writeObjectListToFunctor(swigCPtr, ArFunctor1_CString.getCPtr(functor), endOfLineChars);
  }

}

}
