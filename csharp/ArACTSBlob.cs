//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.8
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace AriaCS {

public class ArACTSBlob : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  public ArACTSBlob(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  public static global::System.Runtime.InteropServices.HandleRef getCPtr(ArACTSBlob obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~ArACTSBlob() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          AriaCSPINVOKE.delete_ArACTSBlob(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public ArACTSBlob() : this(AriaCSPINVOKE.new_ArACTSBlob(), true) {
  }

  public int getArea() {
    int ret = AriaCSPINVOKE.ArACTSBlob_getArea(swigCPtr);
    return ret;
  }

  public int getXCG() {
    int ret = AriaCSPINVOKE.ArACTSBlob_getXCG(swigCPtr);
    return ret;
  }

  public int getYCG() {
    int ret = AriaCSPINVOKE.ArACTSBlob_getYCG(swigCPtr);
    return ret;
  }

  public int getLeft() {
    int ret = AriaCSPINVOKE.ArACTSBlob_getLeft(swigCPtr);
    return ret;
  }

  public int getRight() {
    int ret = AriaCSPINVOKE.ArACTSBlob_getRight(swigCPtr);
    return ret;
  }

  public int getTop() {
    int ret = AriaCSPINVOKE.ArACTSBlob_getTop(swigCPtr);
    return ret;
  }

  public int getBottom() {
    int ret = AriaCSPINVOKE.ArACTSBlob_getBottom(swigCPtr);
    return ret;
  }

  public void setArea(int area) {
    AriaCSPINVOKE.ArACTSBlob_setArea(swigCPtr, area);
  }

  public void setXCG(int xcg) {
    AriaCSPINVOKE.ArACTSBlob_setXCG(swigCPtr, xcg);
  }

  public void setYCG(int ycg) {
    AriaCSPINVOKE.ArACTSBlob_setYCG(swigCPtr, ycg);
  }

  public void setLeft(int left) {
    AriaCSPINVOKE.ArACTSBlob_setLeft(swigCPtr, left);
  }

  public void setRight(int right) {
    AriaCSPINVOKE.ArACTSBlob_setRight(swigCPtr, right);
  }

  public void setTop(int top) {
    AriaCSPINVOKE.ArACTSBlob_setTop(swigCPtr, top);
  }

  public void setBottom(int bottom) {
    AriaCSPINVOKE.ArACTSBlob_setBottom(swigCPtr, bottom);
  }

  public void log() {
    AriaCSPINVOKE.ArACTSBlob_log(swigCPtr);
  }

}

}
