//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.8
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace AriaCS {

public class ArActionDesiredChannel : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  public ArActionDesiredChannel(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  public static global::System.Runtime.InteropServices.HandleRef getCPtr(ArActionDesiredChannel obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~ArActionDesiredChannel() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          AriaCSPINVOKE.delete_ArActionDesiredChannel(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public static double NO_STRENGTH {
    get {
      double ret = AriaCSPINVOKE.ArActionDesiredChannel_NO_STRENGTH_get();
      return ret;
    } 
  }

  public static double MIN_STRENGTH {
    get {
      double ret = AriaCSPINVOKE.ArActionDesiredChannel_MIN_STRENGTH_get();
      return ret;
    } 
  }

  public static double MAX_STRENGTH {
    get {
      double ret = AriaCSPINVOKE.ArActionDesiredChannel_MAX_STRENGTH_get();
      return ret;
    } 
  }

  public ArActionDesiredChannel() : this(AriaCSPINVOKE.new_ArActionDesiredChannel(), true) {
  }

  public void setOverrideDoesLessThan(bool overrideDoesLessThan) {
    AriaCSPINVOKE.ArActionDesiredChannel_setOverrideDoesLessThan(swigCPtr, overrideDoesLessThan);
  }

  public void setDesired(double desired, double desiredStrength, bool allowOverride) {
    AriaCSPINVOKE.ArActionDesiredChannel_setDesired__SWIG_0(swigCPtr, desired, desiredStrength, allowOverride);
  }

  public void setDesired(double desired, double desiredStrength) {
    AriaCSPINVOKE.ArActionDesiredChannel_setDesired__SWIG_1(swigCPtr, desired, desiredStrength);
  }

  public double getDesired() {
    double ret = AriaCSPINVOKE.ArActionDesiredChannel_getDesired(swigCPtr);
    return ret;
  }

  public double getStrength() {
    double ret = AriaCSPINVOKE.ArActionDesiredChannel_getStrength(swigCPtr);
    return ret;
  }

  public double getAllowOverride() {
    double ret = AriaCSPINVOKE.ArActionDesiredChannel_getAllowOverride(swigCPtr);
    return ret;
  }

  public void reset() {
    AriaCSPINVOKE.ArActionDesiredChannel_reset(swigCPtr);
  }

  public void merge(ArActionDesiredChannel desiredChannel) {
    AriaCSPINVOKE.ArActionDesiredChannel_merge(swigCPtr, ArActionDesiredChannel.getCPtr(desiredChannel));
  }

  public void startAverage() {
    AriaCSPINVOKE.ArActionDesiredChannel_startAverage(swigCPtr);
  }

  public void addAverage(ArActionDesiredChannel desiredChannel) {
    AriaCSPINVOKE.ArActionDesiredChannel_addAverage(swigCPtr, ArActionDesiredChannel.getCPtr(desiredChannel));
  }

  public void endAverage() {
    AriaCSPINVOKE.ArActionDesiredChannel_endAverage(swigCPtr);
  }

  public void checkLowerBound(string actionName, string typeName, int lowerBound) {
    AriaCSPINVOKE.ArActionDesiredChannel_checkLowerBound(swigCPtr, actionName, typeName, lowerBound);
  }

  public void checkUpperBound(string actionName, string typeName, int upperBound) {
    AriaCSPINVOKE.ArActionDesiredChannel_checkUpperBound(swigCPtr, actionName, typeName, upperBound);
  }

}

}
