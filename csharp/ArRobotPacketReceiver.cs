//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.8
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace AriaCS {

public class ArRobotPacketReceiver : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  public ArRobotPacketReceiver(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  public static global::System.Runtime.InteropServices.HandleRef getCPtr(ArRobotPacketReceiver obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~ArRobotPacketReceiver() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          AriaCSPINVOKE.delete_ArRobotPacketReceiver(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public ArRobotPacketReceiver(bool allocatePackets, byte sync1, byte sync2) : this(AriaCSPINVOKE.new_ArRobotPacketReceiver__SWIG_0(allocatePackets, sync1, sync2), true) {
  }

  public ArRobotPacketReceiver(bool allocatePackets, byte sync1) : this(AriaCSPINVOKE.new_ArRobotPacketReceiver__SWIG_1(allocatePackets, sync1), true) {
  }

  public ArRobotPacketReceiver(bool allocatePackets) : this(AriaCSPINVOKE.new_ArRobotPacketReceiver__SWIG_2(allocatePackets), true) {
  }

  public ArRobotPacketReceiver() : this(AriaCSPINVOKE.new_ArRobotPacketReceiver__SWIG_3(), true) {
  }

  public ArRobotPacketReceiver(ArDeviceConnection deviceConnection, bool allocatePackets, byte sync1, byte sync2) : this(AriaCSPINVOKE.new_ArRobotPacketReceiver__SWIG_4(ArDeviceConnection.getCPtr(deviceConnection), allocatePackets, sync1, sync2), true) {
  }

  public ArRobotPacketReceiver(ArDeviceConnection deviceConnection, bool allocatePackets, byte sync1) : this(AriaCSPINVOKE.new_ArRobotPacketReceiver__SWIG_5(ArDeviceConnection.getCPtr(deviceConnection), allocatePackets, sync1), true) {
  }

  public ArRobotPacketReceiver(ArDeviceConnection deviceConnection, bool allocatePackets) : this(AriaCSPINVOKE.new_ArRobotPacketReceiver__SWIG_6(ArDeviceConnection.getCPtr(deviceConnection), allocatePackets), true) {
  }

  public ArRobotPacketReceiver(ArDeviceConnection deviceConnection) : this(AriaCSPINVOKE.new_ArRobotPacketReceiver__SWIG_7(ArDeviceConnection.getCPtr(deviceConnection)), true) {
  }

  public ArRobotPacketReceiver(ArDeviceConnection deviceConnection, bool allocatePackets, byte sync1, byte sync2, bool tracking, string trackingLogName) : this(AriaCSPINVOKE.new_ArRobotPacketReceiver__SWIG_8(ArDeviceConnection.getCPtr(deviceConnection), allocatePackets, sync1, sync2, tracking, trackingLogName), true) {
  }

  public ArRobotPacket receivePacket(uint msWait) {
    global::System.IntPtr cPtr = AriaCSPINVOKE.ArRobotPacketReceiver_receivePacket__SWIG_0(swigCPtr, msWait);
    ArRobotPacket ret = (cPtr == global::System.IntPtr.Zero) ? null : new ArRobotPacket(cPtr, false);
    return ret;
  }

  public ArRobotPacket receivePacket() {
    global::System.IntPtr cPtr = AriaCSPINVOKE.ArRobotPacketReceiver_receivePacket__SWIG_1(swigCPtr);
    ArRobotPacket ret = (cPtr == global::System.IntPtr.Zero) ? null : new ArRobotPacket(cPtr, false);
    return ret;
  }

  public void setDeviceConnection(ArDeviceConnection deviceConnection) {
    AriaCSPINVOKE.ArRobotPacketReceiver_setDeviceConnection(swigCPtr, ArDeviceConnection.getCPtr(deviceConnection));
  }

  public ArDeviceConnection getDeviceConnection() {
    global::System.IntPtr cPtr = AriaCSPINVOKE.ArRobotPacketReceiver_getDeviceConnection(swigCPtr);
    ArDeviceConnection ret = (cPtr == global::System.IntPtr.Zero) ? null : new ArDeviceConnection(cPtr, false);
    return ret;
  }

  public bool isAllocatingPackets() {
    bool ret = AriaCSPINVOKE.ArRobotPacketReceiver_isAllocatingPackets(swigCPtr);
    return ret;
  }

  public void setAllocatingPackets(bool allocatePackets) {
    AriaCSPINVOKE.ArRobotPacketReceiver_setAllocatingPackets(swigCPtr, allocatePackets);
  }

  public void setTracking(bool tracking) {
    AriaCSPINVOKE.ArRobotPacketReceiver_setTracking(swigCPtr, tracking);
  }

  public void setTrackingLogName(string trackingLogName) {
    AriaCSPINVOKE.ArRobotPacketReceiver_setTrackingLogName(swigCPtr, trackingLogName);
  }

  public void setPacketReceivedCallback(ArFunctor1_ArRobotPacketP functor) {
    AriaCSPINVOKE.ArRobotPacketReceiver_setPacketReceivedCallback(swigCPtr, ArFunctor1_ArRobotPacketP.getCPtr(functor));
  }

}

}
