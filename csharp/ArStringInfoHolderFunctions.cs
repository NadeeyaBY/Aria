//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.8
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace AriaCS {

public class ArStringInfoHolderFunctions : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  public ArStringInfoHolderFunctions(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  public static global::System.Runtime.InteropServices.HandleRef getCPtr(ArStringInfoHolderFunctions obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~ArStringInfoHolderFunctions() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          AriaCSPINVOKE.delete_ArStringInfoHolderFunctions(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public static void intWrapper(string buffer, ushort bufferLen, ArRetFunctor_Int functor, string format, int navalue) {
    AriaCSPINVOKE.ArStringInfoHolderFunctions_intWrapper(buffer, bufferLen, ArRetFunctor_Int.getCPtr(functor), format, navalue);
  }

  public static void doubleWrapper(string buffer, ushort bufferLen, ArRetFunctor_Double functor, string format) {
    AriaCSPINVOKE.ArStringInfoHolderFunctions_doubleWrapper(buffer, bufferLen, ArRetFunctor_Double.getCPtr(functor), format);
  }

  public static void boolWrapper(string buffer, ushort bufferLen, ArRetFunctor_Bool functor, string format) {
    AriaCSPINVOKE.ArStringInfoHolderFunctions_boolWrapper(buffer, bufferLen, ArRetFunctor_Bool.getCPtr(functor), format);
  }

  public static void stringWrapper(string buffer, ushort bufferLen, SWIGTYPE_p_ArRetFunctorT_char_const_p_t functor, string format) {
    AriaCSPINVOKE.ArStringInfoHolderFunctions_stringWrapper(buffer, bufferLen, SWIGTYPE_p_ArRetFunctorT_char_const_p_t.getCPtr(functor), format);
  }

  public static void cppStringWrapper(string buffer, ushort bufferLen, SWIGTYPE_p_ArRetFunctorT_std__string_t functor) {
    AriaCSPINVOKE.ArStringInfoHolderFunctions_cppStringWrapper(buffer, bufferLen, SWIGTYPE_p_ArRetFunctorT_std__string_t.getCPtr(functor));
  }

  public static void unsignedLongWrapper(string buffer, ushort bufferLen, SWIGTYPE_p_ArRetFunctorT_unsigned_long_t functor, string format, uint navalue) {
    AriaCSPINVOKE.ArStringInfoHolderFunctions_unsignedLongWrapper(buffer, bufferLen, SWIGTYPE_p_ArRetFunctorT_unsigned_long_t.getCPtr(functor), format, navalue);
  }

  public static void longWrapper(string buffer, ushort bufferLen, SWIGTYPE_p_ArRetFunctorT_long_t functor, string format, int navalue) {
    AriaCSPINVOKE.ArStringInfoHolderFunctions_longWrapper(buffer, bufferLen, SWIGTYPE_p_ArRetFunctorT_long_t.getCPtr(functor), format, navalue);
  }

  public static void arTimeWrapper(string buffer, ushort bufferLen, SWIGTYPE_p_ArRetFunctorT_ArTime_t functor, string format) {
    AriaCSPINVOKE.ArStringInfoHolderFunctions_arTimeWrapper(buffer, bufferLen, SWIGTYPE_p_ArRetFunctorT_ArTime_t.getCPtr(functor), format);
  }

  public static void floatWrapper(string buffer, ushort bufferLen, SWIGTYPE_p_ArRetFunctorT_float_t functor, string format) {
    AriaCSPINVOKE.ArStringInfoHolderFunctions_floatWrapper(buffer, bufferLen, SWIGTYPE_p_ArRetFunctorT_float_t.getCPtr(functor), format);
  }

  public ArStringInfoHolderFunctions() : this(AriaCSPINVOKE.new_ArStringInfoHolderFunctions(), true) {
  }

}

}
