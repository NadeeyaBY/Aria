//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.8
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace AriaCS {

public class ArStringInfoHolder : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  public ArStringInfoHolder(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  public static global::System.Runtime.InteropServices.HandleRef getCPtr(ArStringInfoHolder obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~ArStringInfoHolder() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          AriaCSPINVOKE.delete_ArStringInfoHolder(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public ArStringInfoHolder(string name, ushort maxLength, SWIGTYPE_p_ArFunctor2T_char_p_unsigned_short_t functor) : this(AriaCSPINVOKE.new_ArStringInfoHolder(name, maxLength, SWIGTYPE_p_ArFunctor2T_char_p_unsigned_short_t.getCPtr(functor)), true) {
  }

  public string getName() {
    string ret = AriaCSPINVOKE.ArStringInfoHolder_getName(swigCPtr);
    return ret;
  }

  public ushort getMaxLength() {
    ushort ret = AriaCSPINVOKE.ArStringInfoHolder_getMaxLength(swigCPtr);
    return ret;
  }

  public SWIGTYPE_p_ArFunctor2T_char_p_unsigned_short_t getFunctor() {
    global::System.IntPtr cPtr = AriaCSPINVOKE.ArStringInfoHolder_getFunctor(swigCPtr);
    SWIGTYPE_p_ArFunctor2T_char_p_unsigned_short_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_ArFunctor2T_char_p_unsigned_short_t(cPtr, false);
    return ret;
  }

}

}
