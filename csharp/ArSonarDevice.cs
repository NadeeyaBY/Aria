//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.8
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace AriaCS {

public class ArSonarDevice : ArRangeDevice {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  public ArSonarDevice(global::System.IntPtr cPtr, bool cMemoryOwn) : base(AriaCSPINVOKE.ArSonarDevice_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  public static global::System.Runtime.InteropServices.HandleRef getCPtr(ArSonarDevice obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~ArSonarDevice() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          AriaCSPINVOKE.delete_ArSonarDevice(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public ArSonarDevice(uint currentBufferSize, uint cumulativeBufferSize, string name) : this(AriaCSPINVOKE.new_ArSonarDevice__SWIG_0(currentBufferSize, cumulativeBufferSize, name), true) {
  }

  public ArSonarDevice(uint currentBufferSize, uint cumulativeBufferSize) : this(AriaCSPINVOKE.new_ArSonarDevice__SWIG_1(currentBufferSize, cumulativeBufferSize), true) {
  }

  public ArSonarDevice(uint currentBufferSize) : this(AriaCSPINVOKE.new_ArSonarDevice__SWIG_2(currentBufferSize), true) {
  }

  public ArSonarDevice() : this(AriaCSPINVOKE.new_ArSonarDevice__SWIG_3(), true) {
  }

  public void processReadings() {
    AriaCSPINVOKE.ArSonarDevice_processReadings(swigCPtr);
  }

  public override void setRobot(ArRobot robot) {
    AriaCSPINVOKE.ArSonarDevice_setRobot(swigCPtr, ArRobot.getCPtr(robot));
  }

  public override void addReading(double x, double y) {
    AriaCSPINVOKE.ArSonarDevice_addReading(swigCPtr, x, y);
  }

  public void setIgnoreReadingCB(SWIGTYPE_p_ArRetFunctor1T_bool_ArPose_t ignoreReadingCB) {
    AriaCSPINVOKE.ArSonarDevice_setIgnoreReadingCB(swigCPtr, SWIGTYPE_p_ArRetFunctor1T_bool_ArPose_t.getCPtr(ignoreReadingCB));
  }

  public SWIGTYPE_p_ArRetFunctor1T_bool_ArPose_t getIgnoreReadingCB() {
    global::System.IntPtr cPtr = AriaCSPINVOKE.ArSonarDevice_getIgnoreReadingCB(swigCPtr);
    SWIGTYPE_p_ArRetFunctor1T_bool_ArPose_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_ArRetFunctor1T_bool_ArPose_t(cPtr, false);
    return ret;
  }

  public void setCumulativeMaxRange(double range) {
    AriaCSPINVOKE.ArSonarDevice_setCumulativeMaxRange(swigCPtr, range);
  }

}

}
